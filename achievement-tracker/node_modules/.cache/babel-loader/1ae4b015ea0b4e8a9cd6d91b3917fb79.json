{"ast":null,"code":"import ENV from './../config.js';\nconst API_HOST = ENV.api_host;\nexport const storeImage = async Comp => {\n  const url = `${API_HOST}/api/uploadImage/${Comp.state.userName}`;\n  const binaryFile = Comp.state.uploadImage;\n  const imageObject = {\n    image: binaryFile\n  };\n  const request = new Request(url, {\n    method: 'PATCH',\n    body: JSON.stringify(imageObject),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  await fetch(request).then(res => {\n    if (res.status === 200) {\n      Comp.setState({\n        image: binaryFile,\n        uploadImage: \"\"\n      });\n    } else {\n      alert(\"Could not update profile picture\");\n    }\n  });\n};\nexport const getImage = async (userName, Comp) => {\n  const url = `${API_HOST}/api/image/${userName}`;\n  await fetch(url).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    } else {\n      alert(\"Cannot get Profile Images\");\n    }\n  }).then(json => {\n    Comp.setState({\n      image: json.image\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/actions/profilePic.js"],"names":["ENV","API_HOST","api_host","storeImage","Comp","url","state","userName","binaryFile","uploadImage","imageObject","image","request","Request","method","body","JSON","stringify","headers","Accept","fetch","then","res","status","setState","alert","getImage","json","catch","error","console","log"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,gBAAhB;AACA,MAAMC,QAAQ,GAAGD,GAAG,CAACE,QAArB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACtC,QAAMC,GAAG,GAAI,GAAEJ,QAAS,oBAAmBG,IAAI,CAACE,KAAL,CAAWC,QAAS,EAA/D;AACA,QAAMC,UAAU,GAAGJ,IAAI,CAACE,KAAL,CAAWG,WAA9B;AACA,QAAMC,WAAW,GAAG;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAApB;AAEA,QAAMI,OAAO,GAAG,IAAIC,OAAJ,CAAYR,GAAZ,EAAiB;AAC7BS,IAAAA,MAAM,EAAE,OADqB;AAE7BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,WAAf,CAFuB;AAG7BQ,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,mCADH;AAEL,sBAAgB;AAFX;AAHoB,GAAjB,CAAhB;AAQA,QAAMC,KAAK,CAACR,OAAD,CAAL,CACDS,IADC,CACIC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBnB,MAAAA,IAAI,CAACoB,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAEH,UAAT;AAAqBC,QAAAA,WAAW,EAAE;AAAlC,OAAd;AACH,KAFD,MAEO;AACHgB,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACH;AACJ,GAPC,CAAN;AASH,CAtBM;AAwBP,OAAO,MAAMC,QAAQ,GAAG,OAAOnB,QAAP,EAAiBH,IAAjB,KAA0B;AAC9C,QAAMC,GAAG,GAAI,GAAEJ,QAAS,cAAaM,QAAS,EAA9C;AAEA,QAAMa,KAAK,CAACf,GAAD,CAAL,CACDgB,IADC,CACIC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOD,GAAG,CAACK,IAAJ,EAAP;AACH,KAFD,MAEO;AACHF,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACH;AACJ,GAPC,EAQDJ,IARC,CAQIM,IAAI,IAAI;AACVvB,IAAAA,IAAI,CAACoB,QAAL,CAAc;AAAEb,MAAAA,KAAK,EAAEgB,IAAI,CAAChB;AAAd,KAAd;AACH,GAVC,EAWDiB,KAXC,CAWKC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAbC,CAAN;AAcH,CAjBM","sourcesContent":["import ENV from './../config.js'\nconst API_HOST = ENV.api_host\n\nexport const storeImage = async (Comp) => {\n    const url = `${API_HOST}/api/uploadImage/${Comp.state.userName}`\n    const binaryFile = Comp.state.uploadImage\n    const imageObject = { image: binaryFile }\n\n    const request = new Request(url, {\n        method: 'PATCH',\n        body: JSON.stringify(imageObject),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n    await fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                Comp.setState({ image: binaryFile, uploadImage: \"\" })\n            } else {\n                alert(\"Could not update profile picture\")\n            }\n        })\n\n}\n\nexport const getImage = async (userName, Comp) => {\n    const url = `${API_HOST}/api/image/${userName}`\n\n    await fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            } else {\n                alert(\"Cannot get Profile Images\")\n            }\n        })\n        .then(json => {\n            Comp.setState({ image: json.image })\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}"]},"metadata":{},"sourceType":"module"}