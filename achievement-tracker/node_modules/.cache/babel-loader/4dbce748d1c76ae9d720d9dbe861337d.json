{"ast":null,"code":"import _regeneratorRuntime from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{CurrentHeaderButton,HeaderButton,HeaderImage,HeadContainer,HeaderNavBar}from'../HeaderComponent';import logo from'./../../steamIcon2.png';import profilePic from\"../AccountSettings/imgs/sampleProfilePic.jpg\";import settingLogo from\"./../Dashboard/Static/settingLogo.png\";import loadingIcon from\"./../Dashboard/Static/loadingSign.png\";import{PersonalPic,BannerContainer,BannerLink,Friend,FriendList}from'../PersonalBanner';import{AchievementContainer,Game}from'../Achievement';import ChatBox from'../ChatBox';import ProgressBar from'../Achievement/ProgressBar';import{withRouter}from'react-router-dom';import{logout}from'../../actions/reactAuth';import{getFriend,addFriends,deleteFriend,acceptFriend,declineFriend}from'../../actions/friend';import{getImage}from'../../actions/profilePic';import'./style.css';import{getReputation}from\"../../actions/reputation\";import{getGameStats,getAchievementStats}from'../../actions/steamHelpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DashBoard=/*#__PURE__*/function(_React$Component){_inherits(DashBoard,_React$Component);var _super=_createSuper(DashBoard);function DashBoard(props){var _this;_classCallCheck(this,DashBoard);_this=_super.call(this,props);var friendList=[];var game=[{gameImage:settingLogo,gameName:\"Loading Game Data...\",progress:\"NaN\",gameId:\"\"}];var addFriendName=\"\";var searchGameName=\"\";// const isAdmin = UserKeys.getCurrUserAdminStatus() == 'false' ? false : true\nvar userName=_this.props.app.state.currentUser;_this.state={friendList:friendList,game:game,image:\"\",showChat:false,chatName:\"\",addFriendName:addFriendName,searchGameName:searchGameName,// isAdmin: isAdmin,\nuserName:userName,reputation:0,showLoading:true};_this.showChatBox=_this.showChatBox.bind(_assertThisInitialized(_this));_this.unShowChatBox=_this.unShowChatBox.bind(_assertThisInitialized(_this));_this.onChangeFriendUID=_this.onChangeFriendUID.bind(_assertThisInitialized(_this));_this.onSubmitFriendRequest=_this.onSubmitFriendRequest.bind(_assertThisInitialized(_this));_this.onChangeGameSearch=_this.onChangeGameSearch.bind(_assertThisInitialized(_this));_this.onSubmitGameSearch=_this.onSubmitGameSearch.bind(_assertThisInitialized(_this));_this.onClickGameRedirectAchivement=_this.onClickGameRedirectAchivement.bind(_assertThisInitialized(_this));_this.deleteFromFriend=_this.deleteFromFriend.bind(_assertThisInitialized(_this));_this.acceptFriendHandler=_this.acceptFriendHandler.bind(_assertThisInitialized(_this));_this.declineFriendHandler=_this.declineFriendHandler.bind(_assertThisInitialized(_this));return _this;}_createClass(DashBoard,[{key:\"extractStats\",value:function extractStats(data){var completion=-1;if(data.achievements===undefined){return completion;}var max=data.achievements.length;var achieved=0;for(var i=0;i<max;i++){var element=data.achievements[i];if(element.achieved===1){achieved++;}}completion=Math.floor(achieved/max*100);return completion;}},{key:\"updatePercentages\",value:function(){var _updatePercentages=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this2=this;var gameList,i,game,completion;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:gameList=this.state.game;i=0;case 2:if(!(i<gameList.length)){_context.next=12;break;}game=gameList[i];completion=-1;_context.next=7;return getAchievementStats(game.gameId).then(function(res){completion=_this2.extractStats(res);});case 7:if(completion<0){gameList.splice(i,1);i--;}else{game.progress=completion;}this.setState({game:gameList});case 9:i++;_context.next=2;break;case 12:this.setState({game:gameList});this.setState({showLoading:false});case 14:case\"end\":return _context.stop();}}},_callee,this);}));function updatePercentages(){return _updatePercentages.apply(this,arguments);}return updatePercentages;}()// updates games for current user\n},{key:\"updateGames\",value:function updateGames(data){var gameList=[];var baseimgURL='http://media.steampowered.com/steamcommunity/public/images/apps/';var games=data.games;for(var i=0;i<games.length;i++){var gameEntry={};var game=games[i];gameEntry['gameName']=game.name;gameEntry['progress']='Calculating...';gameEntry['gameImage']=\"\".concat(baseimgURL).concat(game.appid,\"/\").concat(game.img_icon_url,\".jpg\");gameEntry['gameId']=game.appid;gameList.push(gameEntry);this.setState({game:gameList});}this.setState({game:gameList});this.updatePercentages();}},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;getFriend(this);getReputation(this);getImage(this.state.userName,this);getGameStats().then(function(res){_this3.updateGames(res);});}},{key:\"showChatBox\",value:function showChatBox(e){e.preventDefault();var friendName=\"\";var target=e.target;if(target.tagName===\"path\"){target=target.parentNode;}if(target.tagName===\"svg\"){if(target.className.baseVal===\"deleteFriend\"){return;}else if(target.className.baseVal===\"friendPendingAccept\"){return;}else if(target.className.baseVal===\"friendPendingDecline\"){return;}}var parent=e.target;while(parent.className!==\"friendContainer\"){parent=parent.parentNode;}friendName=parent.children[0].children[1].innerHTML;//check if this friend is still on pending status\nif(this.state.friendList.filter(function(i){return i.name==friendName;})[0].onPending){alert(\"Accept your friend to chat\");return;}this.setState({chatName:friendName});this.setState({showChat:true});}},{key:\"unShowChatBox\",value:function unShowChatBox(){this.setState({showChat:false});}},{key:\"deleteFromFriend\",value:function deleteFromFriend(e){var parent=e.target;if(parent.tagName===\"path\"){parent=parent.parentNode;}if(parent.tagName===\"svg\"){parent=parent.parentNode;}var friendName=parent.children[0].children[1].innerHTML;deleteFriend(this,friendName);}},{key:\"acceptFriendHandler\",value:function acceptFriendHandler(e){var parent=e.target;if(parent.tagName===\"path\"){parent=parent.parentNode;}if(parent.tagName===\"svg\"){parent=parent.parentNode;}var friendName=parent.parentNode.children[0].children[1].innerHTML;acceptFriend(this,friendName);}},{key:\"declineFriendHandler\",value:function declineFriendHandler(e){var parent=e.target;if(parent.tagName===\"path\"){parent=parent.parentNode;}if(parent.tagName===\"svg\"){parent=parent.parentNode;}var friendName=parent.parentNode.children[0].children[1].innerHTML;declineFriend(this,friendName);}},{key:\"onChangeFriendUID\",value:function onChangeFriendUID(e){this.setState({addFriendName:e.target.value});}},{key:\"onSubmitFriendRequest\",value:function(){var _onSubmitFriendRequest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var i;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();//check if its user it self\nif(!(this.state.addFriendName===this.state.userName)){_context2.next=5;break;}alert(\"Cannot add yourself!\");this.setState({addFriendName:\"\"});return _context2.abrupt(\"return\");case 5:i=0;case 6:if(!(i<this.state.friendList.length)){_context2.next=14;break;}if(!(this.state.friendList[i].name==this.state.addFriendName)){_context2.next=11;break;}alert(\"Friend already exist in your friend list\");this.setState({addFriendName:\"\"});return _context2.abrupt(\"return\");case 11:i++;_context2.next=6;break;case 14:_context2.prev=14;_context2.next=17;return addFriends(this);case 17:this.setState({addFriendName:\"\"});_context2.next=23;break;case 20:_context2.prev=20;_context2.t0=_context2[\"catch\"](14);console.log(_context2.t0);case 23:case\"end\":return _context2.stop();}}},_callee2,this,[[14,20]]);}));function onSubmitFriendRequest(_x){return _onSubmitFriendRequest.apply(this,arguments);}return onSubmitFriendRequest;}()},{key:\"onChangeGameSearch\",value:function onChangeGameSearch(e){this.setState({searchGameName:e.target.value});}},{key:\"onSubmitGameSearch\",value:function onSubmitGameSearch(e){e.preventDefault();this.setState({searchGameName:\"\"});}},{key:\"onClickGameRedirectAchivement\",value:function onClickGameRedirectAchivement(e){var target=e.target;var gameName;if(target.className==\"gameContainer\"){gameName=target.lastChild.lastChild.innerHTML;}else if(target.className==\"gameBody\"||target.className==\"gameImage\"||target.className==\"vertical-row\"){gameName=target.parentNode.lastChild.lastChild.innerHTML;}else if(target.className==\"filledProgress\"){gameName=target.parentNode.nextSibling.innerHTML;}else{gameName=target.parentNode.lastChild.innerHTML;}var gameId=this.state.game.filter(function(i){return i.gameName===gameName;})[0].gameId;this.props.history.push({pathname:'/GameAchievements',state:{gameName:gameName,userName:this.state.userName,reputation:this.state.reputation,gameId:gameId}});}},{key:\"render\",value:function render(){var _this4=this;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(HeadContainer,{bgId:\"dashboard\",children:/*#__PURE__*/_jsxs(HeaderNavBar,{children:[/*#__PURE__*/_jsx(HeaderImage,{to:\"/dashboard\",src:logo}),/*#__PURE__*/_jsxs(\"div\",{className:\"group\",children:[/*#__PURE__*/_jsx(CurrentHeaderButton,{path:\"/Dashboard\",children:\" Dashboard \"}),/*#__PURE__*/_jsx(HeaderButton,{path:\"/reviewForum\",children:\"Forum\"}),/*#__PURE__*/_jsx(HeaderButton,{path:\"/Analytics\",children:\"Analytics\"}),/*#__PURE__*/_jsx(HeaderButton,{path:\"/AccountSettings\",children:\"Settings\"}),/*#__PURE__*/_jsx(HeaderButton,{path:\"/\",logoutFunc:function logoutFunc(){logout(_this4.props.app);},children:\"Log Out\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left\",children:/*#__PURE__*/_jsxs(BannerContainer,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"bannerUserInfo\",children:/*#__PURE__*/_jsxs(\"div\",{id:\"bannerUserName\",children:[\"User Name: \",this.state.userName]})}),this.state.image===\"\"?/*#__PURE__*/_jsx(PersonalPic,{src:profilePic}):/*#__PURE__*/_jsx(PersonalPic,{src:\"data:image/png;base64,\"+this.state.image}),/*#__PURE__*/_jsxs(\"span\",{className:\"bannerReputation\",children:[\"Reputation: \",this.state.reputation]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bannerLeftLinkGroup\",children:[/*#__PURE__*/_jsx(BannerLink,{path:\"https://discord.com\",children:\"Discord\"}),/*#__PURE__*/_jsx(BannerLink,{path:\"https://twitter.com\",children:\"Twitter\"}),/*#__PURE__*/_jsx(BannerLink,{path:\"https://www.facebook.com\",children:\"Facebook\"}),/*#__PURE__*/_jsx(BannerLink,{path:\"https://store.steampowered.com\",children:\"Steam\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"middle\",children:[/*#__PURE__*/_jsx(\"form\",{className:\"searchGame\",onSubmit:function onSubmit(e){return _this4.onSubmitGameSearch(e);},children:/*#__PURE__*/_jsx(\"input\",{className:\"searchGameInput\",placeholder:\"Search for a Game...\",value:this.state.searchGameName,onChange:function onChange(e){return _this4.onChangeGameSearch(e);}})}),/*#__PURE__*/_jsx(AchievementContainer,{bodyId:'shrink',children:this.state.game.map(function(item,i){if(item.gameName.toLowerCase().startsWith(_this4.state.searchGameName.toLowerCase())){return/*#__PURE__*/_jsxs(Game,{image:item.gameImage,redirect:_this4.onClickGameRedirectAchivement,children:[/*#__PURE__*/_jsx(\"span\",{className:\"achivementProgress\",children:item.progress+'%'}),/*#__PURE__*/_jsx(ProgressBar,{completed:item.progress}),/*#__PURE__*/_jsx(\"div\",{className:\"gameInfo\",children:item.gameName})]},i);}})}),!this.state.showLoading||/*#__PURE__*/_jsx(\"div\",{id:\"loadingIcon\",children:/*#__PURE__*/_jsx(\"img\",{src:loadingIcon})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"right\",children:/*#__PURE__*/_jsxs(BannerContainer,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rightBannerTitle\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"rightBannerTitleName\",children:\"Chat\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"addFriendForm\",onSubmit:function onSubmit(e){return _this4.onSubmitFriendRequest(e);},children:[/*#__PURE__*/_jsx(\"input\",{className:\"addFriendInput\",placeholder:\"Enter Friend Name\",value:this.state.addFriendName,onChange:function onChange(e){return _this4.onChangeFriendUID(e);}}),/*#__PURE__*/_jsx(\"button\",{className:\"addFriendButton\",children:\"Add\"})]})]}),/*#__PURE__*/_jsx(FriendList,{children:this.state.friendList.map(function(item,i){return/*#__PURE__*/_jsx(Friend,{chat:_this4.showChatBox,deleteFriend:_this4.deleteFromFriend,pendingStatus:item.onPending,accept:_this4.acceptFriendHandler,decline:_this4.declineFriendHandler,children:item.name},i);})})]})}),this.state.showChat&&/*#__PURE__*/_jsx(ChatBox,{userName:this.state.userName,friendName:this.state.chatName,showChatOption:this.unShowChatBox})]})]});}}]);return DashBoard;}(React.Component);export default withRouter(DashBoard);","map":{"version":3,"sources":["/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/react-components/Dashboard/index.js"],"names":["React","CurrentHeaderButton","HeaderButton","HeaderImage","HeadContainer","HeaderNavBar","logo","profilePic","settingLogo","loadingIcon","PersonalPic","BannerContainer","BannerLink","Friend","FriendList","AchievementContainer","Game","ChatBox","ProgressBar","withRouter","logout","getFriend","addFriends","deleteFriend","acceptFriend","declineFriend","getImage","getReputation","getGameStats","getAchievementStats","DashBoard","props","friendList","game","gameImage","gameName","progress","gameId","addFriendName","searchGameName","userName","app","state","currentUser","image","showChat","chatName","reputation","showLoading","showChatBox","bind","unShowChatBox","onChangeFriendUID","onSubmitFriendRequest","onChangeGameSearch","onSubmitGameSearch","onClickGameRedirectAchivement","deleteFromFriend","acceptFriendHandler","declineFriendHandler","data","completion","achievements","undefined","max","length","achieved","i","element","Math","floor","gameList","then","res","extractStats","splice","setState","baseimgURL","games","gameEntry","name","appid","img_icon_url","push","updatePercentages","updateGames","e","preventDefault","friendName","target","tagName","parentNode","className","baseVal","parent","children","innerHTML","filter","onPending","alert","value","console","log","lastChild","nextSibling","history","pathname","map","item","toLowerCase","startsWith","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { CurrentHeaderButton, HeaderButton, HeaderImage, HeadContainer, HeaderNavBar } from '../HeaderComponent'\nimport logo from './../../steamIcon2.png'\nimport profilePic from \"../AccountSettings/imgs/sampleProfilePic.jpg\"\nimport settingLogo from \"./../Dashboard/Static/settingLogo.png\"\nimport loadingIcon from \"./../Dashboard/Static/loadingSign.png\"\nimport { PersonalPic, BannerContainer, BannerLink, Friend, FriendList } from '../PersonalBanner'\nimport { AchievementContainer, Game } from '../Achievement'\nimport ChatBox from '../ChatBox';\nimport ProgressBar from '../Achievement/ProgressBar'\nimport { withRouter } from 'react-router-dom'\nimport { logout } from '../../actions/reactAuth'\nimport { getFriend, addFriends, deleteFriend, acceptFriend, declineFriend } from '../../actions/friend'\nimport { getImage } from '../../actions/profilePic'\nimport './style.css'\nimport { getReputation } from \"../../actions/reputation\";\nimport { getGameStats, getAchievementStats } from '../../actions/steamHelpers'\n\n\n\nclass DashBoard extends React.Component {\n    constructor(props) {\n        super(props)\n        const friendList = []\n        const game = [\n            { gameImage: settingLogo, gameName: \"Loading Game Data...\", progress: \"NaN\", gameId: \"\" },\n        ]\n        const addFriendName = \"\"\n        const searchGameName = \"\"\n\n        // const isAdmin = UserKeys.getCurrUserAdminStatus() == 'false' ? false : true\n        const userName = this.props.app.state.currentUser\n\n        this.state = {\n            friendList: friendList,\n            game: game,\n            image: \"\",\n            showChat: false,\n            chatName: \"\",\n            addFriendName: addFriendName,\n            searchGameName: searchGameName,\n            // isAdmin: isAdmin,\n            userName: userName,\n            reputation: 0,\n            showLoading: true\n        }\n        this.showChatBox = this.showChatBox.bind(this)\n        this.unShowChatBox = this.unShowChatBox.bind(this)\n        this.onChangeFriendUID = this.onChangeFriendUID.bind(this)\n        this.onSubmitFriendRequest = this.onSubmitFriendRequest.bind(this)\n        this.onChangeGameSearch = this.onChangeGameSearch.bind(this)\n        this.onSubmitGameSearch = this.onSubmitGameSearch.bind(this)\n        this.onClickGameRedirectAchivement = this.onClickGameRedirectAchivement.bind(this)\n        this.deleteFromFriend = this.deleteFromFriend.bind(this)\n        this.acceptFriendHandler = this.acceptFriendHandler.bind(this)\n        this.declineFriendHandler = this.declineFriendHandler.bind(this)\n    }\n\n    extractStats(data) {\n        let completion = -1\n        if (data.achievements === undefined) {\n            return completion\n        }\n        const max = data.achievements.length\n        let achieved = 0\n        for (let i = 0; i < max; i++) {\n            const element = data.achievements[i];\n            if (element.achieved === 1) {\n                achieved++\n            }\n        }\n        completion = Math.floor((achieved / max) * 100)\n        return completion\n    }\n\n    async updatePercentages() {\n        let gameList = this.state.game\n        for (let i = 0; i < gameList.length; i++) {\n            const game = gameList[i];\n            let completion = -1\n            await getAchievementStats(game.gameId)\n                .then(res => { completion = this.extractStats(res) })\n            if (completion < 0) {\n                gameList.splice(i, 1)\n                i--\n            } else {\n                game.progress = completion\n            }\n            this.setState({ game: gameList })\n        }\n        this.setState({ game: gameList })\n        this.setState({ showLoading: false })\n    }\n\n    // updates games for current user\n    updateGames(data) {\n        let gameList = []\n        const baseimgURL = 'http://media.steampowered.com/steamcommunity/public/images/apps/'\n        const games = data.games\n        for (let i = 0; i < games.length; i++) {\n            let gameEntry = {}\n            const game = games[i]\n            gameEntry['gameName'] = game.name\n            gameEntry['progress'] = 'Calculating...'\n            gameEntry['gameImage'] = `${baseimgURL}${game.appid}/${game.img_icon_url}.jpg`\n            gameEntry['gameId'] = game.appid\n            gameList.push(gameEntry)\n            this.setState({ game: gameList })\n        }\n        this.setState({ game: gameList })\n        this.updatePercentages()\n    }\n\n    componentDidMount() {\n        getFriend(this)\n        getReputation(this)\n        getImage(this.state.userName, this)\n        getGameStats()\n            .then(res => {\n                this.updateGames(res)\n            })\n    }\n\n    showChatBox(e) {\n        e.preventDefault();\n        let friendName = \"\";\n        let target = e.target;\n        if (target.tagName === \"path\") {\n            target = target.parentNode\n        }\n        if (target.tagName === \"svg\") {\n            if (target.className.baseVal === \"deleteFriend\") {\n                return;\n            } else if (target.className.baseVal === \"friendPendingAccept\") {\n                return;\n            } else if (target.className.baseVal === \"friendPendingDecline\") {\n                return;\n            }\n        }\n        let parent = e.target\n        while (parent.className !== \"friendContainer\") {\n            parent = parent.parentNode\n        }\n        friendName = parent.children[0].children[1].innerHTML\n        //check if this friend is still on pending status\n        if (this.state.friendList.filter(i => { return i.name == friendName })[0].onPending) {\n            alert(\"Accept your friend to chat\")\n            return;\n        }\n        this.setState({ chatName: friendName })\n        this.setState({ showChat: true })\n    }\n\n    unShowChatBox() {\n        this.setState({ showChat: false })\n    }\n\n    deleteFromFriend(e) {\n        let parent = e.target\n        if (parent.tagName === \"path\") {\n            parent = parent.parentNode\n        }\n        if (parent.tagName === \"svg\") {\n            parent = parent.parentNode\n        }\n        const friendName = parent.children[0].children[1].innerHTML\n        deleteFriend(this, friendName)\n    }\n\n    acceptFriendHandler(e) {\n        let parent = e.target\n        if (parent.tagName === \"path\") {\n            parent = parent.parentNode\n        }\n        if (parent.tagName === \"svg\") {\n            parent = parent.parentNode\n        }\n        const friendName = parent.parentNode.children[0].children[1].innerHTML\n        acceptFriend(this, friendName)\n    }\n\n    declineFriendHandler(e) {\n        let parent = e.target\n        if (parent.tagName === \"path\") {\n            parent = parent.parentNode\n        }\n        if (parent.tagName === \"svg\") {\n            parent = parent.parentNode\n        }\n        const friendName = parent.parentNode.children[0].children[1].innerHTML\n        declineFriend(this, friendName)\n    }\n\n    onChangeFriendUID(e) {\n        this.setState({ addFriendName: e.target.value })\n    }\n\n    async onSubmitFriendRequest(e) {\n        e.preventDefault()\n        //check if its user it self\n        if (this.state.addFriendName === this.state.userName) {\n            alert(\"Cannot add yourself!\")\n            this.setState({ addFriendName: \"\" })\n            return;\n        }\n        //check if friend already exist\n        for (let i = 0; i < this.state.friendList.length; i++) {\n            if (this.state.friendList[i].name == this.state.addFriendName) {\n                alert(\"Friend already exist in your friend list\")\n                this.setState({ addFriendName: \"\" })\n                return;\n            }\n        }\n        try {\n            await addFriends(this)\n            this.setState({ addFriendName: \"\" })\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    onChangeGameSearch(e) {\n        this.setState({ searchGameName: e.target.value })\n    }\n\n    onSubmitGameSearch(e) {\n        e.preventDefault()\n        this.setState({ searchGameName: \"\" })\n    }\n\n    onClickGameRedirectAchivement(e) {\n        const target = e.target\n        let gameName;\n        if (target.className == \"gameContainer\") {\n            gameName = target.lastChild.lastChild.innerHTML;\n        } else if (target.className == \"gameBody\" || target.className == \"gameImage\" || target.className == \"vertical-row\") {\n            gameName = target.parentNode.lastChild.lastChild.innerHTML;\n        } else if (target.className == \"filledProgress\") {\n            gameName = target.parentNode.nextSibling.innerHTML;\n        } else {\n            gameName = target.parentNode.lastChild.innerHTML;\n        }\n        const gameId = this.state.game.filter((i) => { return i.gameName === gameName })[0].gameId\n        this.props.history.push({\n            pathname: '/GameAchievements',\n            state: {\n                gameName: gameName,\n                userName: this.state.userName,\n                reputation: this.state.reputation,\n                gameId: gameId\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <HeadContainer bgId={\"dashboard\"}>\n                    <HeaderNavBar>\n                        <HeaderImage to='/dashboard' src={logo} />\n                        <div className='group'>\n                            {/* {this.state.isAdmin && (<HeaderButton path='/admin'>Admin</HeaderButton>)} */}\n                            <CurrentHeaderButton path=\"/Dashboard\"> Dashboard </CurrentHeaderButton>\n                            <HeaderButton path='/reviewForum'>Forum</HeaderButton>\n                            <HeaderButton path='/Analytics'>Analytics</HeaderButton>\n                            <HeaderButton path='/AccountSettings'>Settings</HeaderButton>\n                            <HeaderButton path='/' logoutFunc={() => { logout(this.props.app) }}>Log Out</HeaderButton>\n                        </div>\n                    </HeaderNavBar>\n                </HeadContainer>\n                <div className='dashboard'>\n                    <div className='left'>\n                        <BannerContainer>\n                            <div className=\"bannerUserInfo\">\n                                <div id=\"bannerUserName\">User Name: {this.state.userName}</div>\n                            </div>\n                            {this.state.image === \"\" ?\n                                <PersonalPic src={profilePic} /> :\n                                <PersonalPic src={\"data:image/png;base64,\" + this.state.image} />\n                            }\n                            <span className=\"bannerReputation\">Reputation: {this.state.reputation}</span>\n                            <div className=\"bannerLeftLinkGroup\">\n                                <BannerLink path=\"https://discord.com\">Discord</BannerLink>\n                                <BannerLink path='https://twitter.com'>Twitter</BannerLink>\n                                <BannerLink path='https://www.facebook.com'>Facebook</BannerLink>\n                                <BannerLink path='https://store.steampowered.com'>Steam</BannerLink>\n                            </div>\n                        </BannerContainer>\n                    </div>\n                    <div className='middle'>\n                        <form className=\"searchGame\" onSubmit={e => this.onSubmitGameSearch(e)}>\n                            <input\n                                className=\"searchGameInput\"\n                                placeholder=\"Search for a Game...\"\n                                value={this.state.searchGameName}\n                                onChange={e => this.onChangeGameSearch(e)}\n                            />\n                        </form>\n                        <AchievementContainer bodyId={'shrink'}>\n                            {this.state.game.map((item, i) => {\n                                if (item.gameName.toLowerCase().startsWith(this.state.searchGameName.toLowerCase())) {\n                                    return (\n                                        <Game key={i} image={item.gameImage} redirect={this.onClickGameRedirectAchivement}>\n                                            <span className=\"achivementProgress\">{item.progress + '%'}</span>\n                                            <ProgressBar completed={item.progress} />\n                                            <div className=\"gameInfo\">{item.gameName}</div>\n                                        </Game>\n                                    )\n                                }\n                            })}\n                        </AchievementContainer>\n                        {!(this.state.showLoading) || <div id=\"loadingIcon\">\n                            <img src={loadingIcon} />\n                        </div>}\n                    </div>\n                    <div className='right'>\n                        <BannerContainer>\n                            <div className=\"rightBannerTitle\">\n                                <p className=\"rightBannerTitleName\">Chat</p>\n                                <form className=\"addFriendForm\" onSubmit={e => this.onSubmitFriendRequest(e)}>\n                                    <input\n                                        className=\"addFriendInput\"\n                                        placeholder=\"Enter Friend Name\"\n                                        value={this.state.addFriendName}\n                                        onChange={e => this.onChangeFriendUID(e)}\n                                    />\n                                    <button className=\"addFriendButton\">Add</button>\n                                </form>\n                            </div>\n                            <FriendList>\n                                {this.state.friendList.map((item, i) => {\n                                    return <Friend\n                                        key={i}\n                                        chat={this.showChatBox}\n                                        deleteFriend={this.deleteFromFriend}\n                                        pendingStatus={item.onPending}\n                                        accept={this.acceptFriendHandler}\n                                        decline={this.declineFriendHandler}\n                                    >\n                                        {item.name}\n                                    </Friend>\n                                })}\n                            </FriendList>\n                        </BannerContainer>\n                    </div>\n                    {this.state.showChat &&\n                        (<ChatBox\n                            userName={this.state.userName}\n                            friendName={this.state.chatName}\n                            showChatOption={this.unShowChatBox} />)}\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withRouter(DashBoard);"]},"metadata":{},"sourceType":"module"}