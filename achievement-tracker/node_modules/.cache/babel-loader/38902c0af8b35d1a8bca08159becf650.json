{"ast":null,"code":"var _jsxFileName = \"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/react-components/Admin/index.js\";\nimport React from \"react\";\nimport { uid } from \"react-uid\";\nimport AdminSearchBar from \"./../AdminSearchBar\";\nimport UserBar from \"./../UserBar\";\nimport ReviewBar from \"./../ReviewBar\";\nimport { HeaderButton, HeaderImage, HeadContainer, HeaderNavBar } from '../HeaderComponent';\nimport { getReviewsOnAdmin, updateReview, deleteReviewOnAdmin, updateUsernameReputation } from '../../actions/review';\nimport { deleteUserOnAdmin, getUsersOnAdmin } from \"../../actions/user\";\nimport { logout } from '../../actions/reactAuth';\nimport logo from './../../steamIcon2.png';\nimport \"./styles.css\";\nimport { deleteVoteRecordByReview, deleteVoteRecordByUser } from \"../../actions/voteRecord\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst log = console.log;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserSearchChange = event => {\n      const target = event.target;\n      this.setState({\n        userSearch: target.value\n      });\n    };\n\n    this.searchUser = () => {\n      const userList = this.state.users.filter(user => {\n        return user.username.includes(this.state.userSearch);\n      });\n      this.setState({\n        usersOnPage: userList\n      });\n    };\n\n    this.handleReviewSearchChange = event => {\n      const target = event.target;\n      this.setState({\n        reviewSearch: target.value\n      });\n    };\n\n    this.searchReview = () => {\n      const reviewList = this.state.reviews.filter(review => {\n        return review.title.includes(this.state.reviewSearch);\n      });\n      this.setState({\n        reviewsOnPage: reviewList\n      });\n    };\n\n    this.deleteUser = username => {\n      const userList = this.state.users.filter(user => user.username !== username);\n      this.setState({\n        users: userList,\n        usersOnPage: userList\n      }); // Delete this user in database\n\n      const user = this.state.users.filter(user => user.username === username)[0];\n      updateUsernameReputation(username, user.reputation, true);\n      deleteUserOnAdmin(user);\n      deleteVoteRecordByUser(username);\n    };\n\n    this.deleteReview = reviewId => {\n      const reviewList = this.state.reviews.filter(review => review.id !== reviewId);\n      this.setState({\n        reviews: reviewList,\n        reviewsOnPage: reviewList\n      }); // Delete this review in database\n\n      const review = this.state.reviews.filter(review => review.id === reviewId)[0];\n      deleteReviewOnAdmin(review);\n      deleteVoteRecordByReview(review.author, reviewId);\n    };\n\n    this.cancelReport = reviewId => {\n      const reviewList = this.state.reviews.map(review => {\n        if (review.id === reviewId) {\n          review.reported = false;\n        }\n\n        return review;\n      });\n      this.setState({\n        reviews: reviewList,\n        reviewsOnPage: reviewList\n      }); // Update review in database\n\n      updateReview(this.state.reviews.filter(review => review.id === reviewId)[0]);\n    };\n\n    this.refreshUsers = () => {\n      this.setState({\n        usersOnPage: this.state.users,\n        userSearch: \"\"\n      });\n    };\n\n    this.refreshReviews = () => {\n      this.setState({\n        reviewsOnPage: this.state.reviews,\n        reviewSearch: \"\"\n      });\n    };\n\n    this.state = {\n      userSearch: \"\",\n      reviewSearch: \"\",\n      users: [],\n      usersOnPage: [],\n      reviews: [],\n      reviewsOnPage: []\n    };\n    this.deleteUser = this.deleteUser.bind(this);\n    this.deleteReview = this.deleteReview.bind(this);\n    this.refreshUsers = this.refreshUsers.bind(this);\n    this.refreshReviews = this.refreshReviews.bind(this);\n  }\n\n  componentDidMount() {\n    getUsersOnAdmin(this);\n    getReviewsOnAdmin(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(HeadContainer, {\n        bgId: \"dashboard\",\n        children: /*#__PURE__*/_jsxDEV(HeaderNavBar, {\n          children: [/*#__PURE__*/_jsxDEV(HeaderImage, {\n            to: \"/\",\n            src: logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group\",\n            children: /*#__PURE__*/_jsxDEV(HeaderButton, {\n              path: \"/\",\n              logoutFunc: () => {\n                logout(this.props.app);\n              },\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-dashboard-component\",\n          children: [/*#__PURE__*/_jsxDEV(AdminSearchBar, {\n            searchContent: this.state.userSearch,\n            handleChange: this.handleUserSearchChange,\n            enterButton: this.searchUser,\n            refreshButton: this.refreshUsers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), this.state.usersOnPage.map(user => /*#__PURE__*/_jsxDEV(UserBar, {\n            username: user.username,\n            reputation: user.reputation,\n            deleteUser: this.deleteUser\n          }, uid(user), false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-dashboard-component\",\n          children: [/*#__PURE__*/_jsxDEV(AdminSearchBar, {\n            searchContent: this.state.reviewSearch,\n            handleChange: this.handleReviewSearchChange,\n            enterButton: this.searchReview,\n            refreshButton: this.refreshReviews\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), this.state.reviewsOnPage.map(review => /*#__PURE__*/_jsxDEV(ReviewBar, {\n            id: review.id,\n            title: review.title,\n            content: review.content,\n            author: review.author,\n            reputation: review.reputation,\n            reported: review.reported,\n            deleteReview: this.deleteReview,\n            cancelReport: this.cancelReport\n          }, uid(review), false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/react-components/Admin/index.js"],"names":["React","uid","AdminSearchBar","UserBar","ReviewBar","HeaderButton","HeaderImage","HeadContainer","HeaderNavBar","getReviewsOnAdmin","updateReview","deleteReviewOnAdmin","updateUsernameReputation","deleteUserOnAdmin","getUsersOnAdmin","logout","logo","deleteVoteRecordByReview","deleteVoteRecordByUser","log","console","Admin","Component","constructor","props","handleUserSearchChange","event","target","setState","userSearch","value","searchUser","userList","state","users","filter","user","username","includes","usersOnPage","handleReviewSearchChange","reviewSearch","searchReview","reviewList","reviews","review","title","reviewsOnPage","deleteUser","reputation","deleteReview","reviewId","id","author","cancelReport","map","reported","refreshUsers","refreshReviews","bind","componentDidMount","render","app","content"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { uid } from \"react-uid\";\n\nimport AdminSearchBar from \"./../AdminSearchBar\";\nimport UserBar from \"./../UserBar\";\nimport ReviewBar from \"./../ReviewBar\";\nimport { HeaderButton, HeaderImage, HeadContainer, HeaderNavBar } from '../HeaderComponent'\nimport { getReviewsOnAdmin, updateReview, deleteReviewOnAdmin, updateUsernameReputation } from '../../actions/review'\nimport { deleteUserOnAdmin, getUsersOnAdmin } from \"../../actions/user\"\nimport { logout } from '../../actions/reactAuth'\nimport logo from './../../steamIcon2.png'\nimport \"./styles.css\"\nimport { deleteVoteRecordByReview, deleteVoteRecordByUser } from \"../../actions/voteRecord\";\n\n\nconst log = console.log\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      userSearch: \"\",\n      reviewSearch: \"\",\n      users: [],\n      usersOnPage: [],\n      reviews: [],\n      reviewsOnPage: []\n    }\n\n    this.deleteUser = this.deleteUser.bind(this)\n    this.deleteReview = this.deleteReview.bind(this)\n    this.refreshUsers = this.refreshUsers.bind(this)\n    this.refreshReviews = this.refreshReviews.bind(this)\n  }\n\n  componentDidMount() {\n    getUsersOnAdmin(this)\n    getReviewsOnAdmin(this)\n  }\n\n  handleUserSearchChange = event => {\n    const target = event.target;\n    this.setState({\n      userSearch: target.value\n    })\n  }\n\n  searchUser = () => {\n    const userList = this.state.users.filter(user => {\n      return user.username.includes(this.state.userSearch)\n    })\n\n    this.setState({\n      usersOnPage: userList\n    })\n  }\n\n  handleReviewSearchChange = event => {\n    const target = event.target;\n    this.setState({\n      reviewSearch: target.value\n    })\n  }\n\n  searchReview = () => {\n    const reviewList = this.state.reviews.filter(review => {\n      return review.title.includes(this.state.reviewSearch)\n    })\n\n    this.setState({\n      reviewsOnPage: reviewList\n    })\n  }\n\n  deleteUser = username => {\n    const userList = this.state.users.filter(user => user.username !== username)\n    this.setState({\n      users: userList,\n      usersOnPage: userList\n    })\n\n    // Delete this user in database\n    const user = this.state.users.filter(user => user.username === username)[0]\n    updateUsernameReputation(username, user.reputation, true)\n    deleteUserOnAdmin(user)\n    deleteVoteRecordByUser(username)\n\n  }\n\n  deleteReview = reviewId => {\n    const reviewList = this.state.reviews.filter(review => review.id !== reviewId)\n    this.setState({\n      reviews: reviewList,\n      reviewsOnPage: reviewList\n    })\n\n    // Delete this review in database\n    const review = this.state.reviews.filter(review => review.id === reviewId)[0]\n    deleteReviewOnAdmin(review)\n    deleteVoteRecordByReview(review.author, reviewId)\n  }\n\n  cancelReport = reviewId => {\n    const reviewList = this.state.reviews.map(review => {\n      if (review.id === reviewId) {\n        review.reported = false\n      }\n      return review\n    })\n    this.setState({\n      reviews: reviewList,\n      reviewsOnPage: reviewList\n    })\n\n    // Update review in database\n    updateReview(this.state.reviews.filter(review => review.id === reviewId)[0])\n  }\n\n  refreshUsers = () => {\n    this.setState({\n      usersOnPage: this.state.users,\n      userSearch: \"\"\n    })\n  }\n\n  refreshReviews = () => {\n    this.setState({\n      reviewsOnPage: this.state.reviews,\n      reviewSearch: \"\"\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <HeadContainer bgId={\"dashboard\"}>\n          <HeaderNavBar>\n            <HeaderImage to='/' src={logo} />\n            <div className='group'>\n              <HeaderButton path='/' logoutFunc={() => { logout(this.props.app) }}>Log Out</HeaderButton>\n            </div>\n          </HeaderNavBar>\n        </HeadContainer>\n\n        <div className=\"admin-dashboard\">\n          <div className=\"admin-dashboard-component\">\n            <AdminSearchBar\n              searchContent={this.state.userSearch}\n              handleChange={this.handleUserSearchChange}\n              enterButton={this.searchUser}\n              refreshButton={this.refreshUsers}\n            />\n\n            {this.state.usersOnPage.map(user => (\n              <UserBar\n                key={uid(user)}\n                username={user.username}\n                reputation={user.reputation}\n                deleteUser={this.deleteUser}\n              />\n            ))}\n          </div>\n\n          <div className=\"admin-dashboard-component\">\n            <AdminSearchBar\n              searchContent={this.state.reviewSearch}\n              handleChange={this.handleReviewSearchChange}\n              enterButton={this.searchReview}\n              refreshButton={this.refreshReviews}\n            />\n\n            {this.state.reviewsOnPage.map(review => (\n              <ReviewBar\n                key={uid(review)}\n                id={review.id}\n                title={review.title}\n                content={review.content}\n                author={review.author}\n                reputation={review.reputation}\n                reported={review.reported}\n                deleteReview={this.deleteReview}\n                cancelReport={this.cancelReport}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Admin;"]},"metadata":{},"sourceType":"module"}