{"ast":null,"code":"var _jsxFileName = \"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/react-components/Signup/index.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport { CurrentHeaderButton, HeaderButton, HeadContainer, HeaderNavBar, HeaderImage } from '../HeaderComponent';\nimport logo from './../../steamIcon2.png';\nimport checkmark from './imgs/checkmark.jpg';\nimport cross from './imgs/cross.jpg';\nimport help from './imgs/help.png';\nimport ENV from '../../config';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Signup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst log = console.log;\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: '',\n      passWord: '',\n      passWord2: '',\n      steamName: '',\n      valid_username: false,\n      valid_steamID: false,\n      valid_pw1: false,\n      valid_pw2: false,\n      showHelp: false\n    };\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      }); // if the username changed, check if the new one is already in use\n      // and disable the signup button if it is\n\n      if (name === 'userName') {\n        fetch(`/usernames/${value}`).then(res => {\n          if (res.status === 404 && value.length > 0) {\n            this.setState({\n              valid_username: true\n            });\n\n            if (value.toLowerCase().startsWith('admin')) {\n              this.setState({\n                valid_username: false\n              });\n            }\n          } else if (res.status === 200 || value.length < 1) {\n            this.setState({\n              valid_username: false\n            });\n          }\n        });\n      } // check that a valid steam ID has been entered\n\n\n      if (name === 'steamName') {\n        fetch(`/steamapi/userinfo/?key=${ENV.steam_key}&steamids=${value}`).then(res => {\n          return res.json();\n        }).then(json => {\n          if (json.response.players.length > 0 && json.response.players[0].communityvisibilitystate === 3) {\n            this.setState({\n              valid_steamID: true\n            });\n          } else {\n            this.setState({\n              valid_steamID: false\n            });\n          }\n        });\n      } // set states for passwords\n\n\n      if (name === 'passWord') {\n        if (value.length >= 4) {\n          this.setState({\n            valid_pw1: true\n          });\n        } else {\n          this.setState({\n            valid_pw1: false\n          });\n        }\n\n        if (value === this.state.passWord2) {\n          this.setState({\n            valid_pw2: true\n          });\n        } else {\n          this.setState({\n            valid_pw2: false\n          });\n        }\n      }\n\n      if (name === 'passWord2') {\n        if (value === this.state.passWord) {\n          this.setState({\n            valid_pw2: true\n          });\n        } else {\n          this.setState({\n            valid_pw2: false\n          });\n        }\n      }\n    };\n\n    this.handleSignup = () => {\n      if (this.state.userName == '' || this.state.passWord == '' || this.state.steamName == '') {\n        alert('some input fields are empty');\n        return;\n      }\n\n      if (this.state.passWord !== this.state.passWord2) {\n        alert('Passwords do not match');\n        return;\n      }\n\n      if (this.state.passWord.length < 4) {\n        alert('password must be at least 4 characters');\n        return;\n      }\n\n      const requestOptions = {\n        method: 'POST',\n        redirect: 'follow',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.userName,\n          password: this.state.passWord,\n          steamName: this.state.steamName\n        })\n      }; // post the request to the backend to create an account\n\n      fetch('/users', requestOptions).then(res => {\n        if (res.status === 400) {\n          alert('server error: account not created');\n        } else if (res.status === 200) {\n          alert('Account creation successful! Please proceed to log in.');\n          this.setState({\n            redirect: '/Login'\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.state.redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"LoginPage\",\n      children: [/*#__PURE__*/_jsxDEV(HeadContainer, {\n        bgId: \"dashboard\",\n        children: /*#__PURE__*/_jsxDEV(HeaderNavBar, {\n          children: [/*#__PURE__*/_jsxDEV(HeaderImage, {\n            to: \"/\",\n            src: logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(HeaderButton, {\n              path: \"/reviewForum\",\n              children: \"Forum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HeaderButton, {\n              path: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slash\",\n              children: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CurrentHeaderButton, {\n              path: \"/Signup\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"SignupContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginText\",\n          children: \"Please enter your details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FieldContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"SignupField\",\n              value: this.state.userName,\n              onChange: this.handleInputChange,\n              type: \"text\",\n              name: \"userName\",\n              placeholder: \"Create a username\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgValidityCheck\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.valid_username ? checkmark : cross\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FieldContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"SignupField\",\n              value: this.state.passWord,\n              onChange: this.handleInputChange,\n              type: \"password\",\n              name: \"passWord\",\n              placeholder: \"Create a password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgValidityCheck\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.valid_pw1 ? checkmark : cross\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FieldContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"SignupField\",\n              value: this.state.passWord2,\n              onChange: this.handleInputChange,\n              type: \"password\",\n              name: \"passWord2\",\n              placeholder: \"Confirm password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgValidityCheck\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.valid_pw1 && this.state.valid_pw2 ? checkmark : cross\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"inputField4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"helpIcon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: help,\n              onMouseEnter: () => {\n                this.setState({\n                  showHelp: true\n                });\n              },\n              onMouseOut: () => {\n                this.setState({\n                  showHelp: false\n                });\n              },\n              onClick: () => {\n                window.open(\"/SteamInfo\");\n              },\n              name: \"helpIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FieldContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"SignupField\",\n              value: this.state.steamName,\n              onChange: this.handleInputChange,\n              type: \"text\",\n              name: \"steamName\",\n              placeholder: \"Enter Steam ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgValidityCheck\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.valid_steamID ? checkmark : cross\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), !this.state.showHelp || /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"helpText\",\n            children: \"Don't know your Steam ID? Click here to find out how to get it!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"SignUpButton\",\n          variant: \"primary\",\n          disabled: !(this.state.valid_username && this.state.valid_steamID && this.state.valid_pw1 && this.state.valid_pw2),\n          onClick: this.handleSignup,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/react-components/Signup/index.js"],"names":["React","Button","Redirect","CurrentHeaderButton","HeaderButton","HeadContainer","HeaderNavBar","HeaderImage","logo","checkmark","cross","help","ENV","log","console","Signup","Component","state","userName","passWord","passWord2","steamName","valid_username","valid_steamID","valid_pw1","valid_pw2","showHelp","handleInputChange","event","target","value","name","setState","fetch","then","res","status","length","toLowerCase","startsWith","steam_key","json","response","players","communityvisibilitystate","handleSignup","alert","requestOptions","method","redirect","headers","body","JSON","stringify","username","password","render","window","open"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\nimport { Redirect } from 'react-router-dom'\n\nimport { CurrentHeaderButton, HeaderButton, HeadContainer, HeaderNavBar, HeaderImage } from '../HeaderComponent'\n\nimport logo from './../../steamIcon2.png'\nimport checkmark from './imgs/checkmark.jpg'\nimport cross from './imgs/cross.jpg'\nimport help from './imgs/help.png'\n\nimport ENV from '../../config'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './Signup.css';\n\nconst log = console.log\n\nclass Signup extends React.Component {\n\n  state = {\n    userName: '',\n    passWord: '',\n    passWord2: '',\n    steamName: '',\n    valid_username: false,\n    valid_steamID: false,\n    valid_pw1: false,\n    valid_pw2: false,\n    showHelp: false\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target\n    const value = target.value\n    const name = target.name\n\n    this.setState({ [name]: value })\n\n    // if the username changed, check if the new one is already in use\n    // and disable the signup button if it is\n    if (name === 'userName') {\n      fetch(`/usernames/${value}`)\n        .then(res => {\n          if (res.status === 404 && value.length > 0) {\n            this.setState({ valid_username: true })\n            if (value.toLowerCase().startsWith('admin')) {\n              this.setState({ valid_username: false })\n            }\n          } else if (res.status === 200 || value.length < 1) {\n            this.setState({ valid_username: false })\n          }\n        })\n    }\n\n    // check that a valid steam ID has been entered\n    if (name === 'steamName') {\n      fetch(`/steamapi/userinfo/?key=${ENV.steam_key}&steamids=${value}`)\n        .then(res => { return res.json() })\n        .then(json => {\n          if (json.response.players.length > 0 && json.response.players[0].communityvisibilitystate === 3) {\n            this.setState({ valid_steamID: true })\n          } else {\n            this.setState({ valid_steamID: false })\n          }\n        })\n    }\n\n    // set states for passwords\n    if (name === 'passWord') {\n      if (value.length >= 4) {\n        this.setState({ valid_pw1: true })\n      } else {\n        this.setState({ valid_pw1: false })\n      }\n      if (value === this.state.passWord2) {\n        this.setState({ valid_pw2: true })\n      } else {\n        this.setState({ valid_pw2: false })\n      }\n    }\n    if (name === 'passWord2') {\n      if (value === this.state.passWord) {\n        this.setState({ valid_pw2: true })\n      } else {\n        this.setState({ valid_pw2: false })\n      }\n    }\n  }\n\n  // some checks for signup and handling of the signup action\n  handleSignup = () => {\n    if (this.state.userName == '' ||\n      this.state.passWord == '' ||\n      this.state.steamName == '') {\n      alert('some input fields are empty')\n      return\n    }\n    if (this.state.passWord !== this.state.passWord2) {\n      alert('Passwords do not match')\n      return\n    }\n    if (this.state.passWord.length < 4) {\n      alert('password must be at least 4 characters')\n      return\n    }\n    const requestOptions = {\n      method: 'POST',\n      redirect: 'follow',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username: this.state.userName,\n        password: this.state.passWord,\n        steamName: this.state.steamName\n      })\n    };\n    // post the request to the backend to create an account\n    fetch('/users', requestOptions)\n      .then(res => {\n        if (res.status === 400) {\n          alert('server error: account not created')\n        } else if (res.status === 200) {\n          alert('Account creation successful! Please proceed to log in.')\n          this.setState({ redirect: '/Login' })\n        }\n      })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    return (\n      <div id='LoginPage'>\n        <HeadContainer bgId={\"dashboard\"}>\n          <HeaderNavBar>\n            <HeaderImage to='/' src={logo} />\n            <div className='group'>\n              <HeaderButton path='/reviewForum'>Forum</HeaderButton>\n              <HeaderButton path='/login'>Login</HeaderButton>\n              <span className=\"slash\">/</span>\n              <CurrentHeaderButton path=\"/Signup\">Sign Up</CurrentHeaderButton>\n            </div>\n          </HeaderNavBar>\n        </HeadContainer>\n        <div id=\"SignupContainer\">\n          <p className='loginText'>Please enter your details:</p>\n\n          <div>\n            <div className=\"FieldContainer\">\n              <input className=\"SignupField\"\n                value={this.state.userName}\n                onChange={this.handleInputChange}\n                type='text'\n                name='userName'\n                placeholder='Create a username'\n                autoFocus></input>\n            </div>\n            <div className=\"imgValidityCheck\">\n              <img src={this.state.valid_username ? checkmark : cross} />\n            </div>\n          </div>\n\n          <div>\n            <div className=\"FieldContainer\">\n              <input className=\"SignupField\"\n                value={this.state.passWord}\n                onChange={this.handleInputChange}\n                type='password'\n                name='passWord'\n                placeholder='Create a password'></input>\n            </div>\n            <div className=\"imgValidityCheck\">\n              <img src={this.state.valid_pw1 ? checkmark : cross} />\n            </div>\n          </div>\n\n          <div>\n            <div className=\"FieldContainer\">\n              <input className=\"SignupField\"\n                value={this.state.passWord2}\n                onChange={this.handleInputChange}\n                type='password'\n                name='passWord2'\n                placeholder='Confirm password'></input>\n            </div>\n            <div className=\"imgValidityCheck\">\n              <img src={this.state.valid_pw1 && this.state.valid_pw2 ? checkmark : cross} />\n            </div>\n          </div>\n\n          <div id=\"inputField4\">\n            <div className=\"helpIcon\">\n              <img src={help}\n                onMouseEnter={() => { this.setState({ showHelp: true }) }}\n                onMouseOut={() => { this.setState({ showHelp: false }) }}\n                onClick={() => { window.open(\"/SteamInfo\") }}\n                name=\"helpIcon\" />\n            </div>\n            <div className=\"FieldContainer\">\n              <input className=\"SignupField\"\n                value={this.state.steamName}\n                onChange={this.handleInputChange}\n                type='text'\n                name='steamName'\n                placeholder='Enter Steam ID'></input>\n            </div>\n            <div className=\"imgValidityCheck\">\n              <img src={this.state.valid_steamID ? checkmark : cross} />\n            </div>\n          </div>\n\n          {!(this.state.showHelp) || <div>\n            <span id=\"helpText\">Don't know your Steam ID? Click here to find out how to get it!</span>\n          </div>}\n\n          <Button className=\"SignUpButton\"\n            variant=\"primary\"\n            disabled={!(this.state.valid_username && this.state.valid_steamID &&\n              this.state.valid_pw1 && this.state.valid_pw2)}\n            onClick={this.handleSignup}>Sign Up\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}