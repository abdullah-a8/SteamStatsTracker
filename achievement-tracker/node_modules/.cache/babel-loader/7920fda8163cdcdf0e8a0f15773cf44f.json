{"ast":null,"code":"import _regeneratorRuntime from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// environment configutations\nimport ENV from'./../config.js';var API_HOST=ENV.api_host;//console.log('Current environment:', ENV.env)\n// A function to send a GET request to the web server,\n// and then loop through them and add a list element for each student\nexport var getFriend=function getFriend(friendList){// currently use leo as userName to test, will be pass in ${friendList.userName}.\nvar url=\"\".concat(API_HOST,\"/api/friends/\").concat(friendList.state.userName);fetch(url).then(function(res){if(res.status===200){// return a promise that resolves with the JSON body\nreturn res.json();}else{alert(\"Could not get friendList\");}}).then(function(json){// the resolved promise with the JSON body\nvar list=[];for(var i=0;i<json.friendList.length;i++){list.push({name:json.friendList[i].name,onPending:false});}for(var _i=0;_i<json.pendingList.length;_i++){list.push({name:json.pendingList[_i].sender,onPending:true});}friendList.setState({friendList:list});}).catch(function(error){console.log(error);});};// A function to send a POST request with a new student\nexport var addFriends=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dashboardComp){var url,friendName,obj,request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// the URL for the request\nurl=\"\".concat(API_HOST,\"/api/friends/\").concat(dashboardComp.state.userName);// Create our request constructor with all the parameters we need\n//reqeust obj\nfriendName=dashboardComp.state.addFriendName;obj={friendName:friendName};request=new Request(url,{method:\"post\",body:JSON.stringify(obj),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});_context.next=6;return fetch(request).then(function(res){if(res.status===200){// return a promise that resolves with the JSON body\n// const newFriendList = dashboardComp.state.friendList\n// newFriendList.push(friendName)\n// dashboardComp.setState({\n//     friendList: newFriendList\n// });\n//alert(\"Success: Waiting for your friend to accept.\")\n}else{alert(\"Error: Friend does not exist or its pending\");}});case 6:case\"end\":return _context.stop();}}},_callee);}));return function addFriends(_x){return _ref.apply(this,arguments);};}();export var deleteFriend=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dashboardComp,friendName){var url,obj,request;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url=\"\".concat(API_HOST,\"/api/friends/delete\");obj={userName:dashboardComp.state.userName,friendName:friendName};request=new Request(url,{method:\"delete\",body:JSON.stringify(obj),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});_context2.next=5;return fetch(request).then(function(res){if(res.status===200){var newFriendList=dashboardComp.state.friendList;newFriendList=newFriendList.filter(function(i){return i.name!==friendName;});dashboardComp.setState({friendList:newFriendList});}else{alert(\"Error\");}});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function deleteFriend(_x2,_x3){return _ref2.apply(this,arguments);};}();export var acceptFriend=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dashboardComp,friendName){var url,obj,request;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:url=\"\".concat(API_HOST,\"/api/friends/accept\");obj={userName:dashboardComp.state.userName,friendName:friendName};request=new Request(url,{method:\"PATCH\",body:JSON.stringify(obj),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});_context3.next=5;return fetch(request).then(function(res){if(res.status===200){var newFriendList=dashboardComp.state.friendList;for(var i=0;i<newFriendList.length;i++){if(newFriendList[i].name===friendName){newFriendList[i].onPending=false;}}dashboardComp.setState({friendList:newFriendList});}else{alert(\"Error\");}});case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function acceptFriend(_x4,_x5){return _ref3.apply(this,arguments);};}();export var declineFriend=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dashboardComp,friendName){var url,obj,request;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:url=\"\".concat(API_HOST,\"/api/friends/decline\");obj={userName:dashboardComp.state.userName,friendName:friendName};request=new Request(url,{method:\"PATCH\",body:JSON.stringify(obj),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});_context4.next=5;return fetch(request).then(function(res){if(res.status===200){var newFriendList=dashboardComp.state.friendList;newFriendList=newFriendList.filter(function(i){return i.name!==friendName;});dashboardComp.setState({friendList:newFriendList});}else{alert(\"Error\");}});case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function declineFriend(_x6,_x7){return _ref4.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/actions/friend.js"],"names":["ENV","API_HOST","api_host","getFriend","friendList","url","state","userName","fetch","then","res","status","json","alert","list","i","length","push","name","onPending","pendingList","sender","setState","catch","error","console","log","addFriends","dashboardComp","friendName","addFriendName","obj","request","Request","method","body","JSON","stringify","headers","Accept","deleteFriend","newFriendList","filter","acceptFriend","declineFriend"],"mappings":"6WACA;AACA,MAAOA,CAAAA,GAAP,KAAgB,gBAAhB,CACA,GAAMC,CAAAA,QAAQ,CAAGD,GAAG,CAACE,QAArB,CACA;AAEA;AACA;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,UAAD,CAAgB,CACrC;AACA,GAAMC,CAAAA,GAAG,WAAMJ,QAAN,yBAA8BG,UAAU,CAACE,KAAX,CAAiBC,QAA/C,CAAT,CAEAC,KAAK,CAACH,GAAD,CAAL,CACKI,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB;AACA,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CAHD,IAGO,CACHC,KAAK,CAAC,0BAAD,CAAL,CACH,CACJ,CARL,EASKJ,IATL,CASU,SAAAG,IAAI,CAAI,CACV;AACA,GAAIE,CAAAA,IAAI,CAAG,EAAX,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,IAAI,CAACR,UAAL,CAAgBY,MAApC,CAA4CD,CAAC,EAA7C,CAAiD,CAC7CD,IAAI,CAACG,IAAL,CAAU,CAAEC,IAAI,CAAEN,IAAI,CAACR,UAAL,CAAgBW,CAAhB,EAAmBG,IAA3B,CAAiCC,SAAS,CAAE,KAA5C,CAAV,EACH,CACD,IAAK,GAAIJ,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAGH,IAAI,CAACQ,WAAL,CAAiBJ,MAArC,CAA6CD,EAAC,EAA9C,CAAkD,CAC9CD,IAAI,CAACG,IAAL,CAAU,CAAEC,IAAI,CAAEN,IAAI,CAACQ,WAAL,CAAiBL,EAAjB,EAAoBM,MAA5B,CAAoCF,SAAS,CAAE,IAA/C,CAAV,EACH,CACDf,UAAU,CAACkB,QAAX,CAAoB,CAAElB,UAAU,CAAEU,IAAd,CAApB,EACH,CAnBL,EAoBKS,KApBL,CAoBW,SAAAC,KAAK,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAtBL,EAuBH,CA3BM,CA8BP;AACA,MAAO,IAAMG,CAAAA,UAAU,0FAAG,iBAAOC,aAAP,iJACtB;AACMvB,GAFgB,WAEPJ,QAFO,yBAEiB2B,aAAa,CAACtB,KAAd,CAAoBC,QAFrC,EAGtB;AACA;AACMsB,UALgB,CAKHD,aAAa,CAACtB,KAAd,CAAoBwB,aALjB,CAMhBC,GANgB,CAMV,CACRF,UAAU,CAAEA,UADJ,CANU,CAShBG,OATgB,CASN,GAAIC,CAAAA,OAAJ,CAAY5B,GAAZ,CAAiB,CAC7B6B,MAAM,CAAE,MADqB,CAE7BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,GAAf,CAFuB,CAG7BO,OAAO,CAAE,CACLC,MAAM,CAAE,mCADH,CAEL,eAAgB,kBAFX,CAHoB,CAAjB,CATM,uBAkBhB/B,CAAAA,KAAK,CAACwB,OAAD,CAAL,CACDvB,IADC,CACI,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CARD,IAQO,CACHE,KAAK,CAAC,6CAAD,CAAL,CACH,CACJ,CAbC,CAlBgB,uDAAH,kBAAVc,CAAAA,UAAU,4CAAhB,CAmCP,MAAO,IAAMa,CAAAA,YAAY,2FAAG,kBAAOZ,aAAP,CAAsBC,UAAtB,0IAClBxB,GADkB,WACTJ,QADS,wBAElB8B,GAFkB,CAEZ,CACRxB,QAAQ,CAAEqB,aAAa,CAACtB,KAAd,CAAoBC,QADtB,CAERsB,UAAU,CAAEA,UAFJ,CAFY,CAOlBG,OAPkB,CAOR,GAAIC,CAAAA,OAAJ,CAAY5B,GAAZ,CAAiB,CAC7B6B,MAAM,CAAE,QADqB,CAE7BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,GAAf,CAFuB,CAG7BO,OAAO,CAAE,CACLC,MAAM,CAAE,mCADH,CAEL,eAAgB,kBAFX,CAHoB,CAAjB,CAPQ,wBAgBlB/B,CAAAA,KAAK,CAACwB,OAAD,CAAL,CACDvB,IADC,CACI,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,GAAI8B,CAAAA,aAAa,CAAGb,aAAa,CAACtB,KAAd,CAAoBF,UAAxC,CACAqC,aAAa,CAAGA,aAAa,CAACC,MAAd,CAAqB,SAAC3B,CAAD,CAAO,CAAE,MAAOA,CAAAA,CAAC,CAACG,IAAF,GAAWW,UAAlB,CAA8B,CAA5D,CAAhB,CACAD,aAAa,CAACN,QAAd,CAAuB,CACnBlB,UAAU,CAAEqC,aADO,CAAvB,EAGH,CAND,IAMO,CACH5B,KAAK,CAAC,OAAD,CAAL,CACH,CACJ,CAXC,CAhBkB,yDAAH,kBAAZ2B,CAAAA,YAAY,kDAAlB,CA8BP,MAAO,IAAMG,CAAAA,YAAY,2FAAG,kBAAOf,aAAP,CAAsBC,UAAtB,0IAClBxB,GADkB,WACTJ,QADS,wBAElB8B,GAFkB,CAEZ,CACRxB,QAAQ,CAAEqB,aAAa,CAACtB,KAAd,CAAoBC,QADtB,CAERsB,UAAU,CAAEA,UAFJ,CAFY,CAOlBG,OAPkB,CAOR,GAAIC,CAAAA,OAAJ,CAAY5B,GAAZ,CAAiB,CAC7B6B,MAAM,CAAE,OADqB,CAE7BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,GAAf,CAFuB,CAG7BO,OAAO,CAAE,CACLC,MAAM,CAAE,mCADH,CAEL,eAAgB,kBAFX,CAHoB,CAAjB,CAPQ,wBAgBlB/B,CAAAA,KAAK,CAACwB,OAAD,CAAL,CACDvB,IADC,CACI,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,GAAI8B,CAAAA,aAAa,CAAGb,aAAa,CAACtB,KAAd,CAAoBF,UAAxC,CACA,IAAK,GAAIW,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG0B,aAAa,CAACzB,MAAlC,CAA0CD,CAAC,EAA3C,CAA+C,CAC3C,GAAI0B,aAAa,CAAC1B,CAAD,CAAb,CAAiBG,IAAjB,GAA0BW,UAA9B,CAA0C,CACtCY,aAAa,CAAC1B,CAAD,CAAb,CAAiBI,SAAjB,CAA6B,KAA7B,CACH,CACJ,CACDS,aAAa,CAACN,QAAd,CAAuB,CACnBlB,UAAU,CAAEqC,aADO,CAAvB,EAGH,CAVD,IAUO,CACH5B,KAAK,CAAC,OAAD,CAAL,CACH,CACJ,CAfC,CAhBkB,yDAAH,kBAAZ8B,CAAAA,YAAY,kDAAlB,CAkCP,MAAO,IAAMC,CAAAA,aAAa,2FAAG,kBAAOhB,aAAP,CAAsBC,UAAtB,0IACnBxB,GADmB,WACVJ,QADU,yBAEnB8B,GAFmB,CAEb,CACRxB,QAAQ,CAAEqB,aAAa,CAACtB,KAAd,CAAoBC,QADtB,CAERsB,UAAU,CAAEA,UAFJ,CAFa,CAOnBG,OAPmB,CAOT,GAAIC,CAAAA,OAAJ,CAAY5B,GAAZ,CAAiB,CAC7B6B,MAAM,CAAE,OADqB,CAE7BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,GAAf,CAFuB,CAG7BO,OAAO,CAAE,CACLC,MAAM,CAAE,mCADH,CAEL,eAAgB,kBAFX,CAHoB,CAAjB,CAPS,wBAgBnB/B,CAAAA,KAAK,CAACwB,OAAD,CAAL,CACDvB,IADC,CACI,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,GAAI8B,CAAAA,aAAa,CAAGb,aAAa,CAACtB,KAAd,CAAoBF,UAAxC,CACAqC,aAAa,CAAGA,aAAa,CAACC,MAAd,CAAqB,SAAA3B,CAAC,CAAI,CAAE,MAAOA,CAAAA,CAAC,CAACG,IAAF,GAAWW,UAAlB,CAA8B,CAA1D,CAAhB,CACAD,aAAa,CAACN,QAAd,CAAuB,CACnBlB,UAAU,CAAEqC,aADO,CAAvB,EAGH,CAND,IAMO,CACH5B,KAAK,CAAC,OAAD,CAAL,CACH,CACJ,CAXC,CAhBmB,yDAAH,kBAAb+B,CAAAA,aAAa,kDAAnB","sourcesContent":["\n// environment configutations\nimport ENV from './../config.js'\nconst API_HOST = ENV.api_host\n//console.log('Current environment:', ENV.env)\n\n// A function to send a GET request to the web server,\n// and then loop through them and add a list element for each student\nexport const getFriend = (friendList) => {\n    // currently use leo as userName to test, will be pass in ${friendList.userName}.\n    const url = `${API_HOST}/api/friends/${friendList.state.userName}`;\n\n    fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                // return a promise that resolves with the JSON body\n                return res.json();\n            } else {\n                alert(\"Could not get friendList\");\n            }\n        })\n        .then(json => {\n            // the resolved promise with the JSON body\n            let list = []\n            for (let i = 0; i < json.friendList.length; i++) {\n                list.push({ name: json.friendList[i].name, onPending: false })\n            }\n            for (let i = 0; i < json.pendingList.length; i++) {\n                list.push({ name: json.pendingList[i].sender, onPending: true })\n            }\n            friendList.setState({ friendList: list });\n        })\n        .catch(error => {\n            console.log(error);\n        });\n};\n\n\n// A function to send a POST request with a new student\nexport const addFriends = async (dashboardComp) => {\n    // the URL for the request\n    const url = `${API_HOST}/api/friends/${dashboardComp.state.userName}`;\n    // Create our request constructor with all the parameters we need\n    //reqeust obj\n    const friendName = dashboardComp.state.addFriendName\n    const obj = {\n        friendName: friendName\n    }\n    const request = new Request(url, {\n        method: \"post\",\n        body: JSON.stringify(obj),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    await fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                // return a promise that resolves with the JSON body\n                // const newFriendList = dashboardComp.state.friendList\n                // newFriendList.push(friendName)\n                // dashboardComp.setState({\n                //     friendList: newFriendList\n                // });\n                //alert(\"Success: Waiting for your friend to accept.\")\n            } else {\n                alert(\"Error: Friend does not exist or its pending\");\n            }\n        })\n};\n\n\nexport const deleteFriend = async (dashboardComp, friendName) => {\n    const url = `${API_HOST}/api/friends/delete`;\n    const obj = {\n        userName: dashboardComp.state.userName,\n        friendName: friendName\n    }\n\n    const request = new Request(url, {\n        method: \"delete\",\n        body: JSON.stringify(obj),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    await fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                let newFriendList = dashboardComp.state.friendList\n                newFriendList = newFriendList.filter((i) => { return i.name !== friendName })\n                dashboardComp.setState({\n                    friendList: newFriendList\n                });\n            } else {\n                alert(\"Error\");\n            }\n        })\n}\n\nexport const acceptFriend = async (dashboardComp, friendName) => {\n    const url = `${API_HOST}/api/friends/accept`;\n    const obj = {\n        userName: dashboardComp.state.userName,\n        friendName: friendName\n    }\n\n    const request = new Request(url, {\n        method: \"PATCH\",\n        body: JSON.stringify(obj),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    await fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                let newFriendList = dashboardComp.state.friendList\n                for (let i = 0; i < newFriendList.length; i++) {\n                    if (newFriendList[i].name === friendName) {\n                        newFriendList[i].onPending = false\n                    }\n                }\n                dashboardComp.setState({\n                    friendList: newFriendList\n                });\n            } else {\n                alert(\"Error\");\n            }\n        })\n}\n\nexport const declineFriend = async (dashboardComp, friendName) => {\n    const url = `${API_HOST}/api/friends/decline`;\n    const obj = {\n        userName: dashboardComp.state.userName,\n        friendName: friendName\n    }\n\n    const request = new Request(url, {\n        method: \"PATCH\",\n        body: JSON.stringify(obj),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n\n    await fetch(request)\n        .then(res => {\n            if (res.status === 200) {\n                let newFriendList = dashboardComp.state.friendList\n                newFriendList = newFriendList.filter(i => { return i.name !== friendName })\n                dashboardComp.setState({\n                    friendList: newFriendList\n                });\n            } else {\n                alert(\"Error\");\n            }\n        })\n}"]},"metadata":{},"sourceType":"module"}