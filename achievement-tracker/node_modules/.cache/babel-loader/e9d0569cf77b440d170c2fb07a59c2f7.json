{"ast":null,"code":"var _jsxFileName = \"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/react-components/AccountSettings/index.js\";\nimport React from \"react\";\nimport { CurrentHeaderButton, HeaderButton, HeadContainer, HeaderNavBar, HeaderImage } from '../HeaderComponent';\nimport sampleProfilePic from \"./imgs/sampleProfilePic.jpg\";\nimport logo from './../../steamIcon2.png';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { storeImage, getImage } from '../../actions/profilePic';\nimport { logout, changePassword } from '../../actions/reactAuth';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AccountSettings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.editAction = input => {\n      if (document.getElementById(input).className === \"hide\") {\n        document.getElementById(input).className = \"show\";\n        let button = document.getElementById(input).parentElement.lastChild;\n        button.innerHTML = \"Save\";\n        button.style.backgroundColor = \"#007bff\";\n        button.style.borderColor = \"#007bff\";\n      } else {\n        document.getElementById(input).className = \"hide\";\n        this.setState({\n          [input]: document.getElementById(input).value\n        });\n\n        if (input === \"passwordInput\") {\n          const newPassword = document.getElementById(input).value;\n          console.log(newPassword);\n          changePassword(newPassword);\n          this.setState({\n            passwordHidden: false\n          });\n        }\n\n        let button = document.getElementById(input).parentElement.lastChild;\n        button.innerHTML = \"Edit\";\n        button.style.backgroundColor = \"#6c757d\";\n        button.style.borderColor = \"#6c757d\";\n      }\n    };\n\n    this._handleReaderLoaded = readerEvent => {\n      const binaryString = readerEvent.target.result;\n      this.setState({\n        uploadImage: btoa(binaryString)\n      });\n    };\n\n    this.handleSumbitImage = e => {\n      e.preventDefault();\n      storeImage(this);\n    };\n\n    this.handleselectedFile = e => {\n      const file = e.target.files[0];\n\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = this._handleReaderLoaded.bind(this);\n        reader.readAsBinaryString(file);\n      }\n    };\n\n    const userName = this.props.app.state.currentUser;\n    this.state = {\n      userName: userName,\n      passwordInput: \"\",\n      passwordHidden: true,\n      steamInput: \"PolarisTM\",\n      ubisoftInput: \"Polaris04\",\n      playstationInput: \"Dancin9D0nZ\",\n      xboxInput: \"N/A\",\n      image: \"\",\n      uploadImage: \"\"\n    };\n    this.handleSumbitImage = this.handleSumbitImage.bind(this);\n  }\n\n  async componentDidMount() {\n    await getImage(this.state.userName, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"AccountSettingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"HeaderSection\",\n        children: /*#__PURE__*/_jsxDEV(HeadContainer, {\n          bgId: \"dashboard\",\n          children: /*#__PURE__*/_jsxDEV(HeaderNavBar, {\n            children: [/*#__PURE__*/_jsxDEV(HeaderImage, {\n              to: \"/dashboard\",\n              src: logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(HeaderButton, {\n                path: \"/Dashboard\",\n                children: \"Dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(HeaderButton, {\n                path: \"/ReviewForum\",\n                children: \"Forum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(HeaderButton, {\n                path: \"/Analytics\",\n                children: \"Analytics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CurrentHeaderButton, {\n                path: \"/AccountSettings\",\n                children: \"Settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(HeaderButton, {\n                path: \"/\",\n                logoutFunc: () => {\n                  logout(this.props.app);\n                },\n                children: \"Log Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"TitleSection\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" Account Settings for \", this.state.userName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ProfilePicBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Profile Picture \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"ProfilePicSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"ProfilePicDisplay\",\n            children: [this.state.image === \"\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"CurrentProfilePic\",\n              src: sampleProfilePic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"CurrentProfilePic\",\n              src: \"data:image/png;base64,\" + this.state.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"ProfilePicCaption\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" Current Picture \\u25B2 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"UploadProfilePic\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" Upload a new image: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onChange: this.handleselectedFile,\n              onSubmit: this.handleSumbitImage,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"image\",\n                accept: \".jpeg, .png, .jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"UserDetailsSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" User Details \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TextInputButton\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", this.state.userName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TextInputButton\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Password: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", this.state.passwordHidden ? \"*\".repeat(8) : this.state.passwordInput, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"hide\",\n            type: \"text\",\n            id: \"passwordInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: () => {\n              this.editAction(\"passwordInput\");\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AccountSettings;","map":{"version":3,"sources":["/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/react-components/AccountSettings/index.js"],"names":["React","CurrentHeaderButton","HeaderButton","HeadContainer","HeaderNavBar","HeaderImage","sampleProfilePic","logo","storeImage","getImage","logout","changePassword","AccountSettings","Component","constructor","props","editAction","input","document","getElementById","className","button","parentElement","lastChild","innerHTML","style","backgroundColor","borderColor","setState","value","newPassword","console","log","passwordHidden","_handleReaderLoaded","readerEvent","binaryString","target","result","uploadImage","btoa","handleSumbitImage","e","preventDefault","handleselectedFile","file","files","reader","FileReader","onload","bind","readAsBinaryString","userName","app","state","currentUser","passwordInput","steamInput","ubisoftInput","playstationInput","xboxInput","image","componentDidMount","render","repeat"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { CurrentHeaderButton, HeaderButton, HeadContainer, HeaderNavBar, HeaderImage } from '../HeaderComponent'\n\nimport sampleProfilePic from \"./imgs/sampleProfilePic.jpg\"\nimport logo from './../../steamIcon2.png'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { storeImage, getImage } from '../../actions/profilePic'\n\nimport { logout, changePassword } from '../../actions/reactAuth'\n\nimport \"./style.css\"\n\nclass AccountSettings extends React.Component {\n    constructor(props) {\n        super(props)\n\n        const userName = this.props.app.state.currentUser\n\n        this.state = {\n            userName: userName,\n            passwordInput: \"\",\n            passwordHidden: true,\n            steamInput: \"PolarisTM\",\n            ubisoftInput: \"Polaris04\",\n            playstationInput: \"Dancin9D0nZ\",\n            xboxInput: \"N/A\",\n            image: \"\",\n            uploadImage: \"\"\n        }\n\n        this.handleSumbitImage = this.handleSumbitImage.bind(this)\n    }\n\n    async componentDidMount() {\n        await getImage(this.state.userName, this)\n    }\n\n    editAction = input => {\n        if (document.getElementById(input).className === \"hide\") {\n            document.getElementById(input).className = \"show\"\n            let button = document.getElementById(input).parentElement.lastChild\n            button.innerHTML = \"Save\"\n            button.style.backgroundColor = \"#007bff\"\n            button.style.borderColor = \"#007bff\"\n        } else {\n            document.getElementById(input).className = \"hide\"\n            this.setState({\n                [input]: document.getElementById(input).value\n            })\n            if (input === \"passwordInput\") {\n                const newPassword = document.getElementById(input).value\n                console.log(newPassword)\n                changePassword(newPassword)\n                this.setState({ passwordHidden: false })\n            }\n            let button = document.getElementById(input).parentElement.lastChild\n            button.innerHTML = \"Edit\"\n            button.style.backgroundColor = \"#6c757d\"\n            button.style.borderColor = \"#6c757d\"\n        }\n    }\n\n    _handleReaderLoaded = (readerEvent) => {\n        const binaryString = readerEvent.target.result\n        this.setState({\n            uploadImage: btoa(binaryString)\n        })\n    }\n\n    handleSumbitImage = (e) => {\n        e.preventDefault()\n        storeImage(this)\n    }\n\n    handleselectedFile = (e) => {\n        const file = e.target.files[0]\n        if (file) {\n            const reader = new FileReader()\n            reader.onload = this._handleReaderLoaded.bind(this)\n            reader.readAsBinaryString(file)\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"AccountSettingsPage\">\n                <div id=\"HeaderSection\">\n                    <HeadContainer bgId={\"dashboard\"}>\n                        <HeaderNavBar>\n                            <HeaderImage to=\"/dashboard\" src={logo}></HeaderImage>\n                            <div className='group'>\n                                <HeaderButton path='/Dashboard'>Dashboard</HeaderButton>\n                                <HeaderButton path='/ReviewForum'>Forum</HeaderButton>\n                                <HeaderButton path='/Analytics'>Analytics</HeaderButton>\n                                <CurrentHeaderButton path='/AccountSettings'>Settings</CurrentHeaderButton>\n                                <HeaderButton path='/' logoutFunc={() => { logout(this.props.app) }}>Log Out</HeaderButton>\n                            </div>\n                        </HeaderNavBar>\n                    </HeadContainer>\n                </div>\n\n                <div id=\"TitleSection\">\n                    <h1> Account Settings for {this.state.userName} </h1>\n                </div>\n                <div id=\"ProfilePicBlock\">\n                    <h2> Profile Picture </h2>\n                    <div id=\"ProfilePicSection\">\n                        <div id=\"ProfilePicDisplay\">\n                            {this.state.image === \"\" ?\n                                <img id=\"CurrentProfilePic\" src={sampleProfilePic} /> :\n                                <img id=\"CurrentProfilePic\" src={\"data:image/png;base64,\" + this.state.image} />\n                            }\n                            <div id=\"ProfilePicCaption\">\n                                <span> Current Picture ▲ </span>\n                            </div>\n                        </div>\n                        {/* Saving the profile picture to your profile is currently non functional as we need the backend to store the image the user uploads */}\n                        <div id=\"UploadProfilePic\">\n                            <span> Upload a new image: </span>\n                            <form onChange={this.handleselectedFile} onSubmit={this.handleSumbitImage}>\n                                <input type=\"file\" name=\"image\" accept=\".jpeg, .png, .jpg\" />\n                                <input type=\"submit\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"UserDetailsSection\">\n                    <h2> User Details </h2>\n                    <div className=\"TextInputButton\">\n                        <p>Username: <span> {this.state.userName} </span></p>\n                    </div>\n                    <div className=\"TextInputButton\">\n                        <p> Password: <span> {this.state.passwordHidden ? \"*\".repeat(8) : this.state.passwordInput} </span></p>\n                        <input className=\"hide\" type=\"text\" id=\"passwordInput\"></input>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={() => { this.editAction(\"passwordInput\") }}>\n                            Edit\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AccountSettings;"]},"metadata":{},"sourceType":"module"}