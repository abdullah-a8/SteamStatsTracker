{"ast":null,"code":"import ENV from './../config.js';\nconst API_HOST = ENV.api_host;\nexport const getReputation = dashComp => {\n  const url = `${API_HOST}/api/user/reputation/${dashComp.state.userName}`;\n  fetch(url).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    } else {\n      console.log(\"Error: Could not get reputation\");\n    }\n  }).then(json => {\n    dashComp.setState({\n      reputation: json.reputation\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const updateReputation = (page, reputation) => {\n  const url = `${API_HOST}/api/user/updatereputation/${page.state.userName}`;\n  const username = page.state.userName;\n  const obj = {\n    username: username,\n    reputation: reputation\n  };\n  const request = new Request(url, {\n    method: 'PATCH',\n    body: JSON.stringify(obj),\n    headers: {\n      \"Accept\": \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  fetch(request).then(function (res) {\n    if (res.status === 200) {\n      console.log(\"Reputation updated\");\n    } else {\n      console.log(\"Error: Cannot update reputation\");\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/actions/reputation.js"],"names":["ENV","API_HOST","api_host","getReputation","dashComp","url","state","userName","fetch","then","res","status","json","console","log","setState","reputation","catch","error","updateReputation","page","username","obj","request","Request","method","body","JSON","stringify","headers"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,gBAAhB;AACA,MAAMC,QAAQ,GAAGD,GAAG,CAACE,QAArB;AAEA,OAAO,MAAMC,aAAa,GAAIC,QAAD,IAAc;AACvC,QAAMC,GAAG,GAAI,GAAEJ,QAAS,wBAAuBG,QAAQ,CAACE,KAAT,CAAeC,QAAS,EAAvE;AAEAC,EAAAA,KAAK,CAACH,GAAD,CAAL,CACKI,IADL,CACUC,GAAG,IAAI;AACT,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH;AACJ,GAPL,EAQKL,IARL,CAQUG,IAAI,IAAI;AACVR,IAAAA,QAAQ,CAACW,QAAT,CAAkB;AAAEC,MAAAA,UAAU,EAAEJ,IAAI,CAACI;AAAnB,KAAlB;AACH,GAVL,EAWKC,KAXL,CAWWC,KAAK,IAAI;AACZL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,GAbL;AAcH,CAjBM;AAmBP,OAAO,MAAMC,gBAAgB,GAAG,CAACC,IAAD,EAAOJ,UAAP,KAAsB;AAClD,QAAMX,GAAG,GAAI,GAAEJ,QAAS,8BAA6BmB,IAAI,CAACd,KAAL,CAAWC,QAAS,EAAzE;AACA,QAAMc,QAAQ,GAAGD,IAAI,CAACd,KAAL,CAAWC,QAA5B;AACA,QAAMe,GAAG,GAAG;AACRD,IAAAA,QAAQ,EAAEA,QADF;AAERL,IAAAA,UAAU,EAAEA;AAFJ,GAAZ;AAKA,QAAMO,OAAO,GAAG,IAAIC,OAAJ,CAAYnB,GAAZ,EAAiB;AAC7BoB,IAAAA,MAAM,EAAE,OADqB;AAE7BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,GAAf,CAFuB;AAG7BO,IAAAA,OAAO,EAAE;AACL,gBAAU,mCADL;AAEL,sBAAgB;AAFX;AAHoB,GAAjB,CAAhB;AASArB,EAAAA,KAAK,CAACe,OAAD,CAAL,CACKd,IADL,CACU,UAAUC,GAAV,EAAe;AACjB,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBE,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,KAFD,MAEO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH;AACJ,GAPL,EAOOG,KAPP,CAOcC,KAAD,IAAW;AAChBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,GATL;AAUH,CA3BM","sourcesContent":["import ENV from './../config.js'\nconst API_HOST = ENV.api_host\n\nexport const getReputation = (dashComp) => {\n    const url = `${API_HOST}/api/user/reputation/${dashComp.state.userName}`\n\n    fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            } else {\n                console.log(\"Error: Could not get reputation\")\n            }\n        })\n        .then(json => {\n            dashComp.setState({ reputation: json.reputation })\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const updateReputation = (page, reputation) => {\n    const url = `${API_HOST}/api/user/updatereputation/${page.state.userName}`\n    const username = page.state.userName\n    const obj = {\n        username: username,\n        reputation: reputation\n    }\n\n    const request = new Request(url, {\n        method: 'PATCH',\n        body: JSON.stringify(obj),\n        headers: {\n            \"Accept\": \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(function (res) {\n            if (res.status === 200) {\n                console.log(\"Reputation updated\")\n            } else {\n                console.log(\"Error: Cannot update reputation\")\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n}"]},"metadata":{},"sourceType":"module"}