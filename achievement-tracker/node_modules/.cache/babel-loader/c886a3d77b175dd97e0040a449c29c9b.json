{"ast":null,"code":"import ENV from'./../config.js';var API_HOST=ENV.api_host;export var getReputation=function getReputation(dashComp){var url=\"\".concat(API_HOST,\"/api/user/reputation/\").concat(dashComp.state.userName);fetch(url).then(function(res){if(res.status===200){return res.json();}else{console.log(\"Error: Could not get reputation\");}}).then(function(json){dashComp.setState({reputation:json.reputation});}).catch(function(error){console.log(error);});};export var updateReputation=function updateReputation(page,reputation){var url=\"\".concat(API_HOST,\"/api/user/updatereputation/\").concat(page.state.userName);var username=page.state.userName;var obj={username:username,reputation:reputation};var request=new Request(url,{method:'PATCH',body:JSON.stringify(obj),headers:{\"Accept\":\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){console.log(\"Reputation updated\");}else{console.log(\"Error: Cannot update reputation\");}}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/actions/reputation.js"],"names":["ENV","API_HOST","api_host","getReputation","dashComp","url","state","userName","fetch","then","res","status","json","console","log","setState","reputation","catch","error","updateReputation","page","username","obj","request","Request","method","body","JSON","stringify","headers"],"mappings":"AAAA,MAAOA,CAAAA,GAAP,KAAgB,gBAAhB,CACA,GAAMC,CAAAA,QAAQ,CAAGD,GAAG,CAACE,QAArB,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,CAAc,CACvC,GAAMC,CAAAA,GAAG,WAAMJ,QAAN,iCAAsCG,QAAQ,CAACE,KAAT,CAAeC,QAArD,CAAT,CAEAC,KAAK,CAACH,GAAD,CAAL,CACKI,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CAFD,IAEO,CACHC,OAAO,CAACC,GAAR,CAAY,iCAAZ,EACH,CACJ,CAPL,EAQKL,IARL,CAQU,SAAAG,IAAI,CAAI,CACVR,QAAQ,CAACW,QAAT,CAAkB,CAAEC,UAAU,CAAEJ,IAAI,CAACI,UAAnB,CAAlB,EACH,CAVL,EAWKC,KAXL,CAWW,SAAAC,KAAK,CAAI,CACZL,OAAO,CAACC,GAAR,CAAYI,KAAZ,EACH,CAbL,EAcH,CAjBM,CAmBP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,CAAOJ,UAAP,CAAsB,CAClD,GAAMX,CAAAA,GAAG,WAAMJ,QAAN,uCAA4CmB,IAAI,CAACd,KAAL,CAAWC,QAAvD,CAAT,CACA,GAAMc,CAAAA,QAAQ,CAAGD,IAAI,CAACd,KAAL,CAAWC,QAA5B,CACA,GAAMe,CAAAA,GAAG,CAAG,CACRD,QAAQ,CAAEA,QADF,CAERL,UAAU,CAAEA,UAFJ,CAAZ,CAKA,GAAMO,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAYnB,GAAZ,CAAiB,CAC7BoB,MAAM,CAAE,OADqB,CAE7BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,GAAf,CAFuB,CAG7BO,OAAO,CAAE,CACL,SAAU,mCADL,CAEL,eAAgB,kBAFX,CAHoB,CAAjB,CAAhB,CASArB,KAAK,CAACe,OAAD,CAAL,CACKd,IADL,CACU,SAAUC,GAAV,CAAe,CACjB,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpBE,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACH,CAFD,IAEO,CACHD,OAAO,CAACC,GAAR,CAAY,iCAAZ,EACH,CACJ,CAPL,EAOOG,KAPP,CAOa,SAACC,KAAD,CAAW,CAChBL,OAAO,CAACC,GAAR,CAAYI,KAAZ,EACH,CATL,EAUH,CA3BM","sourcesContent":["import ENV from './../config.js'\nconst API_HOST = ENV.api_host\n\nexport const getReputation = (dashComp) => {\n    const url = `${API_HOST}/api/user/reputation/${dashComp.state.userName}`\n\n    fetch(url)\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            } else {\n                console.log(\"Error: Could not get reputation\")\n            }\n        })\n        .then(json => {\n            dashComp.setState({ reputation: json.reputation })\n        })\n        .catch(error => {\n            console.log(error);\n        });\n}\n\nexport const updateReputation = (page, reputation) => {\n    const url = `${API_HOST}/api/user/updatereputation/${page.state.userName}`\n    const username = page.state.userName\n    const obj = {\n        username: username,\n        reputation: reputation\n    }\n\n    const request = new Request(url, {\n        method: 'PATCH',\n        body: JSON.stringify(obj),\n        headers: {\n            \"Accept\": \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    fetch(request)\n        .then(function (res) {\n            if (res.status === 200) {\n                console.log(\"Reputation updated\")\n            } else {\n                console.log(\"Error: Cannot update reputation\")\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n}"]},"metadata":{},"sourceType":"module"}