{"ast":null,"code":"var _jsxFileName = \"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/react-components/Analytics/index.js\";\nimport React from \"react\";\nimport { uid } from \"react-uid\";\nimport sampleProfilePic from \"../AccountSettings/imgs/sampleProfilePic.jpg\";\nimport logo from './../../steamIcon2.png';\nimport loadingIcon from \"./../Dashboard/Static/loadingSign.png\";\nimport { HeaderButton, CurrentHeaderButton, HeadContainer, HeaderNavBar, HeaderImage } from '../HeaderComponent';\nimport { logout } from '../../actions/reactAuth';\nimport { getGameStats, getAchievementStats } from '../../actions/steamHelpers';\nimport { getUserReviews } from '../../actions/review';\nimport { getReputation, updateReputation } from '../../actions/reputation';\nimport { updateUsernameReputation } from '../../actions/review';\nimport { getImage } from '../../actions/profilePic';\nimport \"./Analytics.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst prettyMilliseconds = require('pretty-ms'); // All of the statistics listed on this page, both in the banner and in the below table, are hardcoded sample values.\n// In phase 2, we will use API calls to populate this part of the user's profile with the relevant statistics we pull.\n\n\nclass Analytics extends React.Component {\n  constructor(props) {\n    super(props);\n    const stats = [{\n      id: 0,\n      title: \"Loading Game Info...\",\n      unlocked: 0,\n      total: 0,\n      playtime: 0,\n      completion: NaN\n    }];\n    const userName = this.props.app.state.currentUser;\n    this.state = {\n      userName: userName,\n      stats: stats,\n      statsShown: [],\n      userReviews: [],\n      numReviews: 0,\n      reviewScore: 0,\n      reputation: 1,\n      totalAchievements: 0,\n      averageCompletion: 0,\n      totalPlaytime: 0,\n      averagePlaytime: 0,\n      gamesOwned: 0,\n      totalGames: 0,\n      gamesAttempted: 0,\n      gamesProcessed: 0,\n      showLoading: true,\n      sortAscending: false,\n      joinDate: '',\n      image: \"\"\n    };\n  }\n\n  onSortDown(column) {\n    if (this.state.sortAscending) {\n      this.setState({\n        sortAscending: false\n      });\n      this.onSortUp(column);\n      return;\n    }\n\n    this.setState({\n      sortAscending: true\n    });\n    let stats = this.state.statsShown;\n    stats.sort((a, b) => {\n      if (typeof a[column] !== typeof b[column]) {\n        return typeof a[column] == 'string' ? 1 : -1;\n      }\n\n      if (typeof a[column] == \"string\") {\n        return a[column].localeCompare(b[column]);\n      }\n\n      return a[column] - b[column];\n    });\n    this.setState({\n      stats: stats\n    });\n  }\n\n  onSortUp(column) {\n    let stats = this.state.statsShown;\n    stats.sort((a, b) => {\n      if (typeof a[column] !== typeof b[column]) {\n        return typeof a[column] == 'string' ? 1 : -1;\n      }\n\n      if (typeof a[column] == \"string\") {\n        return b[column].localeCompare(a[column]);\n      }\n\n      return b[column] - a[column];\n    });\n    this.setState({\n      stats: stats\n    });\n  }\n\n  calculateReputation() {\n    const completion = this.state.averageCompletion;\n    const achievements = this.state.totalAchievements;\n    const playtime = this.state.totalPlaytime;\n    const reviewScore = this.state.reviewScore;\n    const gamesOwned = this.state.totalGames;\n    let completionComponent;\n    let achievementMultiplier;\n    let playtimeComponent;\n    let reviewComponent;\n    let gameComponent;\n\n    if (completion > 90) {\n      completionComponent = 3;\n    } else {\n      completionComponent = completion / 30;\n    }\n\n    if (achievements > 2000) {\n      achievementMultiplier = 1;\n    } else {\n      achievementMultiplier = achievements / 2000;\n    }\n\n    if (playtime > 5000) {\n      playtimeComponent = 2;\n    } else {\n      playtimeComponent = playtime / 2500;\n    }\n\n    if (reviewScore > 100) {\n      reviewComponent = 3;\n    } else {\n      reviewComponent = reviewScore / 30;\n    }\n\n    if (gamesOwned > 100) {\n      gameComponent = 2;\n    } else {\n      gameComponent = gamesOwned / 50;\n    }\n\n    const rawReputation = achievementMultiplier * completionComponent + playtimeComponent + reviewComponent + gameComponent;\n    const reputation = Math.floor(rawReputation);\n    this.setState({\n      reputation: reputation\n    });\n    updateReputation(this, reputation);\n    updateUsernameReputation(this.state.userName, reputation, false);\n    return reputation;\n  }\n\n  extractStats(data) {\n    let completion = -1;\n\n    if (data.achievements === undefined) {\n      return completion;\n    }\n\n    const max = data.achievements.length;\n    let achieved = 0;\n\n    for (let i = 0; i < max; i++) {\n      const element = data.achievements[i];\n\n      if (element.achieved === 1) {\n        achieved++;\n      }\n    }\n\n    completion = achieved / max * 100;\n    return [achieved, max, completion];\n  }\n\n  updateBannerStats() {\n    const tableStats = this.state.stats;\n    let totalAchievements = 0;\n    let totalPlaytime = 0;\n    let totalCompletion = 0;\n    let numGames = 0;\n    let gamesWithAchievement = 0;\n\n    for (let i = 0; i < tableStats.length; i++) {\n      const game = tableStats[i];\n\n      if (game.completion > 0) {\n        totalAchievements += game.unlocked;\n        totalCompletion += game.completion;\n        numGames++;\n      }\n\n      if (typeof game.completion !== 'string') {\n        gamesWithAchievement++;\n      }\n\n      totalPlaytime += game.playtime;\n    }\n\n    this.setState({\n      totalGames: gamesWithAchievement\n    });\n    this.setState({\n      gamesAttempted: numGames\n    });\n    this.setState({\n      totalAchievements: totalAchievements\n    });\n    this.setState({\n      totalPlaytime: totalPlaytime\n    });\n    this.setState({\n      averagePlaytime: totalPlaytime / tableStats.filter(game => game.playtime > 0.1).length\n    });\n\n    if (numGames > 0) {\n      this.setState({\n        averageCompletion: totalCompletion / numGames\n      });\n    }\n  }\n\n  async updateAsync(game) {\n    let gameStats = -1;\n    await getAchievementStats(game.id).then(res => {\n      gameStats = this.extractStats(res);\n    });\n\n    if (gameStats === -1) {\n      game.unlocked = '-';\n      game.total = '-';\n      game.completion = '-';\n    } else {\n      game.unlocked = gameStats[0];\n      game.total = gameStats[1];\n      game.completion = gameStats[2];\n      this.setState({\n        totalGames: this.state.totalGames + 1\n      });\n      this.setState({\n        totalAchievements: this.state.totalAchievements + gameStats[0]\n      });\n\n      if (gameStats[2] > 0) {\n        this.setState({\n          gamesAttempted: this.state.gamesAttempted + 1\n        });\n      }\n    }\n\n    this.setState({\n      gamesProcessed: this.state.gamesProcessed + 1\n    });\n  }\n\n  async updateAchievements() {\n    let gameList = this.state.stats;\n    this.setState({\n      statsShown: gameList.slice()\n    });\n    const step = 6;\n\n    for (let i = 0; i < gameList.length; i += step) {\n      this.updateBannerStats();\n      await Promise.all(gameList.slice(i, i + step).map(game => this.updateAsync(game)));\n    }\n\n    this.updateBannerStats();\n    this.setState({\n      showLoading: false\n    });\n    this.calculateReputation();\n  }\n\n  updateStats(data) {\n    let gameList = [];\n    const games = data.games;\n\n    for (let i = 0; i < games.length; i++) {\n      let gameEntry = {};\n      const game = games[i];\n      gameEntry['title'] = game.name;\n      gameEntry['unlocked'] = 'Calculating...';\n      gameEntry['total'] = 'Calculating...';\n      gameEntry['completion'] = 'Calculating...';\n      gameEntry['playtime'] = game.playtime_forever / 60;\n      gameEntry['id'] = game.appid;\n      gameList.push(gameEntry);\n      this.setState({\n        stats: gameList\n      });\n    }\n\n    this.setState({\n      gamesOwned: gameList.length\n    });\n    this.setState({\n      stats: gameList\n    });\n    this.updateAchievements();\n  }\n\n  getReviewStats(data) {\n    const reviews = data;\n    let numReviews = reviews.length;\n    let score = 0;\n\n    for (let i = 0; i < reviews.length; i++) {\n      score += reviews[i].upvotes;\n      score -= reviews[i].downvotes;\n    }\n\n    this.setState({\n      userReviews: reviews\n    });\n    this.setState({\n      numReviews: numReviews\n    });\n    this.setState({\n      reviewScore: score\n    });\n  } // sets the user membership length to a human readable string\n\n\n  async setMemberAge() {\n    let joined;\n    await fetch(`/users/joindate/${this.state.userName}`).then(res => {\n      return res.json();\n    }).then(json => {\n      joined = json.time;\n    });\n    const now = new Date();\n    const joinedDate = new Date(joined);\n    const age_ms = now.getTime() - joinedDate.getTime();\n    const ageString = prettyMilliseconds(age_ms) + '  ';\n    const stopPoint = ageString.split(' ', 2).join(' ').length;\n    this.setState({\n      joinDate: 'Member for ' + ageString.slice(0, stopPoint)\n    });\n  }\n\n  async componentDidMount() {\n    this.setMemberAge();\n    getGameStats().then(res => {\n      this.updateStats(res);\n    });\n    await getUserReviews(this, this.state.userName).then(res => {\n      this.getReviewStats(res);\n    });\n    getReputation(this);\n    getImage(this.state.userName, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"AnalyticsPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"HeaderSection\",\n        children: /*#__PURE__*/_jsxDEV(HeadContainer, {\n          bgId: \"dashboard\",\n          children: /*#__PURE__*/_jsxDEV(HeaderNavBar, {\n            children: [/*#__PURE__*/_jsxDEV(HeaderImage, {\n              to: \"/dashboard\",\n              src: logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(HeaderButton, {\n                path: \"/Dashboard\",\n                children: \"Dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(HeaderButton, {\n                path: \"/ReviewForum\",\n                children: \"Forum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CurrentHeaderButton, {\n                path: \"/Analytics\",\n                children: \"Analytics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(HeaderButton, {\n                path: \"/AccountSettings\",\n                children: \"Settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(HeaderButton, {\n                path: \"/\",\n                logoutFunc: () => {\n                  logout(this.props.app);\n                },\n                children: \"Log Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"BodySection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"TitleSection\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"StatsSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"StatsHeader\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"StatsUser\",\n              children: [this.state.image === \"\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n                id: \"StatsProfilePic\",\n                src: sampleProfilePic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                id: \"StatsProfilePic\",\n                src: \"data:image/png;base64,\" + this.state.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"StatsUserCaption\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", this.state.userName, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", this.state.joinDate, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"StatsReputation\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Reputation Level:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"ReputationContainer\",\n                children: [!this.state.showLoading || /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"loadingIcon1\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: loadingIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", this.state.reputation, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"StatsRow\",\n            id: \"StatsRow1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"StatBoxLeft\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Total Achievements\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", this.state.totalAchievements, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"StatBoxCenter\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Total Playtime\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", (Math.round(this.state.totalPlaytime * 100) / 100).toFixed(2), \" hours \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"StatBoxRight\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Reviews Posted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", this.state.numReviews, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"StatsRow\",\n            id: \"StatsRow2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"StatBoxLeft\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Average Completion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", (Math.round(this.state.averageCompletion * 100) / 100).toFixed(2), \" % \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"StatBoxCenter\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Average Playtime\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", (Math.round(this.state.averagePlaytime * 100) / 100).toFixed(2), \" hours \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"StatBoxRight\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Review Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", this.state.reviewScore, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"TableSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"StatsTitle\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Lifetime Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 29\n            }, this), !this.state.showLoading || /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"loadingIcon2\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loadingIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"TotalStats\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Total Games Attempted: \", this.state.gamesAttempted, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Total Games Supporting Achievements: \", this.state.totalGames, \" (from a total of \", this.state.gamesOwned, \" games owned) \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 29\n            }, this), !this.state.showLoading || /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Progress: processed \", this.state.gamesProcessed, \" games out of \", this.state.gamesOwned, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"StatsTable\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  id: \"tableID\",\n                  className: \"tableHeader\",\n                  children: [\"ID\", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sort\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"sortButton\",\n                      onClick: () => this.onSortDown(\"id\"),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: this.state.sortAscending ? '▲' : '▼'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 377,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  id: \"tableTitle\",\n                  className: \"tableHeader\",\n                  children: [\"Title\", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sort\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"sortButton\",\n                      onClick: () => this.onSortDown(\"title\"),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: this.state.sortAscending ? '▲' : '▼'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  id: \"tableCompletion\",\n                  className: \"tableHeader\",\n                  children: [\"Completion %\", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sort\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"sortButton\",\n                      onClick: () => this.onSortDown(\"completion\"),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: this.state.sortAscending ? '▲' : '▼'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 389,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  id: \"tableUnlocked\",\n                  className: \"tableHeader\",\n                  children: [\"Unlocked\", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sort\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"sortButton\",\n                      onClick: () => this.onSortDown(\"unlocked\"),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: this.state.sortAscending ? '▲' : '▼'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 395,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 394,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  id: \"tableTotal\",\n                  className: \"tableHeader\",\n                  children: [\"Total\", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sort\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"sortButton\",\n                      onClick: () => this.onSortDown(\"total\"),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: this.state.sortAscending ? '▲' : '▼'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 401,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  id: \"tablePlaytime\",\n                  className: \"tableHeader\",\n                  children: [\"Playtime\", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sort\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"sortButton\",\n                      onClick: () => this.onSortDown(\"playtime\"),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: this.state.sortAscending ? '▲' : '▼'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 407,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.statsShown.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"tableCell\",\n                  children: row.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"tableCell\",\n                  children: row.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"tableCell\",\n                  children: [typeof row.completion == 'string' ? row.completion : (Math.round(row.completion * 100) / 100).toFixed(2), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"tableCell\",\n                  children: row.unlocked\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"tableCell\",\n                  children: row.total\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"tableCell\",\n                  children: [row.playtime.toFixed(2), \" h \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 45\n                }, this)]\n              }, uid(row), true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Analytics;","map":{"version":3,"sources":["/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/react-components/Analytics/index.js"],"names":["React","uid","sampleProfilePic","logo","loadingIcon","HeaderButton","CurrentHeaderButton","HeadContainer","HeaderNavBar","HeaderImage","logout","getGameStats","getAchievementStats","getUserReviews","getReputation","updateReputation","updateUsernameReputation","getImage","prettyMilliseconds","require","Analytics","Component","constructor","props","stats","id","title","unlocked","total","playtime","completion","NaN","userName","app","state","currentUser","statsShown","userReviews","numReviews","reviewScore","reputation","totalAchievements","averageCompletion","totalPlaytime","averagePlaytime","gamesOwned","totalGames","gamesAttempted","gamesProcessed","showLoading","sortAscending","joinDate","image","onSortDown","column","setState","onSortUp","sort","a","b","localeCompare","calculateReputation","achievements","completionComponent","achievementMultiplier","playtimeComponent","reviewComponent","gameComponent","rawReputation","Math","floor","extractStats","data","undefined","max","length","achieved","i","element","updateBannerStats","tableStats","totalCompletion","numGames","gamesWithAchievement","game","filter","updateAsync","gameStats","then","res","updateAchievements","gameList","slice","step","Promise","all","map","updateStats","games","gameEntry","name","playtime_forever","appid","push","getReviewStats","reviews","score","upvotes","downvotes","setMemberAge","joined","fetch","json","time","now","Date","joinedDate","age_ms","getTime","ageString","stopPoint","split","join","componentDidMount","render","round","toFixed","row"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { uid } from \"react-uid\"\n\nimport sampleProfilePic from \"../AccountSettings/imgs/sampleProfilePic.jpg\"\nimport logo from './../../steamIcon2.png'\nimport loadingIcon from \"./../Dashboard/Static/loadingSign.png\"\n\nimport { HeaderButton, CurrentHeaderButton, HeadContainer, HeaderNavBar, HeaderImage } from '../HeaderComponent'\nimport { logout } from '../../actions/reactAuth'\nimport { getGameStats, getAchievementStats } from '../../actions/steamHelpers'\nimport { getUserReviews } from '../../actions/review'\nimport { getReputation, updateReputation } from '../../actions/reputation'\nimport { updateUsernameReputation } from '../../actions/review'\nimport { getImage } from '../../actions/profilePic'\n\nimport \"./Analytics.css\"\n\nconst prettyMilliseconds = require('pretty-ms');\n\n// All of the statistics listed on this page, both in the banner and in the below table, are hardcoded sample values.\n// In phase 2, we will use API calls to populate this part of the user's profile with the relevant statistics we pull.\n\nclass Analytics extends React.Component {\n    constructor(props) {\n        super(props)\n        const stats = [\n            { id: 0, title: \"Loading Game Info...\", unlocked: 0, total: 0, playtime: 0, completion: NaN }\n        ]\n        const userName = this.props.app.state.currentUser\n\n        this.state = {\n            userName: userName,\n            stats: stats,\n            statsShown: [],\n            userReviews: [],\n            numReviews: 0,\n            reviewScore: 0,\n            reputation: 1,\n            totalAchievements: 0,\n            averageCompletion: 0,\n            totalPlaytime: 0,\n            averagePlaytime: 0,\n            gamesOwned: 0,\n            totalGames: 0,\n            gamesAttempted: 0,\n            gamesProcessed: 0,\n            showLoading: true,\n            sortAscending: false,\n            joinDate: '',\n            image: \"\"\n        }\n    }\n\n    onSortDown(column) {\n        if (this.state.sortAscending) {\n            this.setState({ sortAscending: false })\n            this.onSortUp(column)\n            return\n        }\n        this.setState({ sortAscending: true })\n        let stats = this.state.statsShown\n        stats.sort((a, b) => {\n            if (typeof (a[column]) !== typeof (b[column])) {\n                return typeof (a[column]) == 'string' ? 1 : -1\n            }\n            if (typeof (a[column]) == \"string\") {\n                return (a[column].localeCompare(b[column]))\n            }\n            return (a[column] - b[column])\n        })\n        this.setState({\n            stats: stats\n        })\n    }\n\n    onSortUp(column) {\n        let stats = this.state.statsShown\n        stats.sort((a, b) => {\n            if (typeof (a[column]) !== typeof (b[column])) {\n                return typeof (a[column]) == 'string' ? 1 : -1\n            }\n            if (typeof (a[column]) == \"string\") {\n                return (b[column].localeCompare(a[column]))\n            }\n            return (b[column] - a[column])\n        })\n        this.setState({\n            stats: stats\n        })\n    }\n\n    calculateReputation() {\n        const completion = this.state.averageCompletion\n        const achievements = this.state.totalAchievements\n        const playtime = this.state.totalPlaytime\n        const reviewScore = this.state.reviewScore\n        const gamesOwned = this.state.totalGames\n        let completionComponent\n        let achievementMultiplier\n        let playtimeComponent\n        let reviewComponent\n        let gameComponent\n        if (completion > 90) {\n            completionComponent = 3\n        } else {\n            completionComponent = completion / 30\n        }\n\n        if (achievements > 2000) {\n            achievementMultiplier = 1\n        } else {\n            achievementMultiplier = achievements / 2000\n        }\n\n        if (playtime > 5000) {\n            playtimeComponent = 2\n        } else {\n            playtimeComponent = playtime / 2500\n        }\n\n        if (reviewScore > 100) {\n            reviewComponent = 3\n        } else {\n            reviewComponent = reviewScore / 30\n        }\n\n        if (gamesOwned > 100) {\n            gameComponent = 2\n        } else {\n            gameComponent = gamesOwned / 50\n        }\n        const rawReputation = achievementMultiplier * completionComponent\n            + playtimeComponent\n            + reviewComponent\n            + gameComponent\n        const reputation = Math.floor(rawReputation)\n        this.setState({ reputation: reputation })\n        updateReputation(this, reputation)\n        updateUsernameReputation(this.state.userName, reputation, false)\n        return reputation\n    }\n\n    extractStats(data) {\n        let completion = -1\n        if (data.achievements === undefined) {\n            return completion\n        }\n        const max = data.achievements.length\n        let achieved = 0\n        for (let i = 0; i < max; i++) {\n            const element = data.achievements[i];\n            if (element.achieved === 1) {\n                achieved++\n            }\n        }\n        completion = (achieved / max) * 100\n        return [achieved, max, completion]\n    }\n\n    updateBannerStats() {\n        const tableStats = this.state.stats\n        let totalAchievements = 0\n        let totalPlaytime = 0\n        let totalCompletion = 0\n        let numGames = 0\n        let gamesWithAchievement = 0\n        for (let i = 0; i < tableStats.length; i++) {\n            const game = tableStats[i];\n            if (game.completion > 0) {\n                totalAchievements += game.unlocked\n                totalCompletion += game.completion\n                numGames++\n            }\n            if (typeof (game.completion) !== 'string') {\n                gamesWithAchievement++\n            }\n            totalPlaytime += game.playtime\n        }\n        this.setState({ totalGames: gamesWithAchievement })\n        this.setState({ gamesAttempted: numGames })\n        this.setState({ totalAchievements: totalAchievements })\n        this.setState({ totalPlaytime: totalPlaytime })\n        this.setState({ averagePlaytime: (totalPlaytime / tableStats.filter(game => game.playtime > 0.1).length) })\n        if (numGames > 0) {\n            this.setState({ averageCompletion: (totalCompletion / numGames) })\n        }\n    }\n\n    async updateAsync(game) {\n        let gameStats = -1\n        await getAchievementStats(game.id)\n            .then(res => { gameStats = this.extractStats(res) })\n        if (gameStats === -1) {\n            game.unlocked = '-'\n            game.total = '-'\n            game.completion = '-'\n        } else {\n            game.unlocked = gameStats[0]\n            game.total = gameStats[1]\n            game.completion = gameStats[2]\n            this.setState({ totalGames: this.state.totalGames + 1 })\n            this.setState({ totalAchievements: this.state.totalAchievements + gameStats[0] })\n            if (gameStats[2] > 0) {\n                this.setState({ gamesAttempted: this.state.gamesAttempted + 1 })\n            }\n        }\n        this.setState({ gamesProcessed: this.state.gamesProcessed + 1 })\n    }\n\n    async updateAchievements() {\n        let gameList = this.state.stats\n        this.setState({ statsShown: gameList.slice() })\n        const step = 6\n        for (let i = 0; i < gameList.length; i += step) {\n            this.updateBannerStats()\n            await Promise.all(gameList.slice(i, i + step).map(game => this.updateAsync(game)))\n        }\n        this.updateBannerStats()\n        this.setState({ showLoading: false })\n        this.calculateReputation()\n    }\n\n    updateStats(data) {\n        let gameList = []\n        const games = data.games\n        for (let i = 0; i < games.length; i++) {\n            let gameEntry = {}\n            const game = games[i]\n            gameEntry['title'] = game.name\n            gameEntry['unlocked'] = 'Calculating...'\n            gameEntry['total'] = 'Calculating...'\n            gameEntry['completion'] = 'Calculating...'\n            gameEntry['playtime'] = game.playtime_forever / 60\n            gameEntry['id'] = game.appid\n            gameList.push(gameEntry)\n            this.setState({ stats: gameList })\n        }\n        this.setState({ gamesOwned: gameList.length })\n        this.setState({ stats: gameList })\n        this.updateAchievements()\n    }\n\n    getReviewStats(data) {\n        const reviews = data\n        let numReviews = reviews.length\n        let score = 0\n        for (let i = 0; i < reviews.length; i++) {\n            score += reviews[i].upvotes\n            score -= reviews[i].downvotes\n        }\n        this.setState({ userReviews: reviews })\n        this.setState({ numReviews: numReviews })\n        this.setState({ reviewScore: score })\n    }\n\n\n    // sets the user membership length to a human readable string\n    async setMemberAge() {\n        let joined\n        await fetch(`/users/joindate/${this.state.userName}`)\n            .then(res => { return res.json() })\n            .then(json => { joined = json.time })\n        const now = new Date()\n        const joinedDate = new Date(joined)\n        const age_ms = now.getTime() - joinedDate.getTime()\n        const ageString = prettyMilliseconds(age_ms) + '  '\n        const stopPoint = ageString.split(' ', 2).join(' ').length\n        this.setState({ joinDate: 'Member for ' + ageString.slice(0, stopPoint) })\n    }\n\n    async componentDidMount() {\n        this.setMemberAge()\n        getGameStats()\n            .then(res => { this.updateStats(res) })\n        await getUserReviews(this, this.state.userName)\n            .then(res => { this.getReviewStats(res) })\n        getReputation(this)\n        getImage(this.state.userName, this)\n    }\n\n    render() {\n        return (\n            <div id=\"AnalyticsPage\">\n\n                <div id=\"HeaderSection\">\n                    <HeadContainer bgId={\"dashboard\"}>\n                        <HeaderNavBar>\n                            <HeaderImage to=\"/dashboard\" src={logo}></HeaderImage>\n                            <div className='group'>\n                                <HeaderButton path='/Dashboard'>Dashboard</HeaderButton>\n                                <HeaderButton path='/ReviewForum'>Forum</HeaderButton>\n                                <CurrentHeaderButton path='/Analytics'>Analytics</CurrentHeaderButton>\n                                <HeaderButton path='/AccountSettings'>Settings</HeaderButton>\n                                <HeaderButton path='/' logoutFunc={() => { logout(this.props.app) }}>Log Out</HeaderButton>\n                            </div>\n                        </HeaderNavBar>\n                    </HeadContainer>\n                </div>\n\n                <div id=\"BodySection\">\n                    <div id=\"TitleSection\">\n                        <h1>Analytics</h1>\n                    </div>\n\n                    <div id=\"StatsSection\">\n                        <div id=\"StatsHeader\">\n                            <div id=\"StatsUser\">\n                                {this.state.image === \"\" ?\n                                    <img id=\"StatsProfilePic\" src={sampleProfilePic} /> :\n                                    <img id=\"StatsProfilePic\" src={\"data:image/png;base64,\" + this.state.image} />\n                                }\n                                <div id=\"StatsUserCaption\">\n                                    <p> {this.state.userName} </p>\n                                    <span> {this.state.joinDate} </span>\n                                </div>\n                            </div>\n                            <div id=\"StatsReputation\">\n                                <p>Reputation Level:</p>\n                                <div id=\"ReputationContainer\">\n                                    {!(this.state.showLoading) || <div id=\"loadingIcon1\">\n                                        <img src={loadingIcon} />\n                                    </div>}\n                                    <span> {this.state.reputation} </span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"StatsRow\" id=\"StatsRow1\">\n                            <div className=\"StatBoxLeft\">\n                                <p>Total Achievements</p>\n                                <span> {this.state.totalAchievements} </span>\n                            </div>\n                            <div className=\"StatBoxCenter\">\n                                <p>Total Playtime</p>\n                                <span> {(Math.round(this.state.totalPlaytime * 100) / 100).toFixed(2)} hours </span>\n                            </div>\n                            <div className=\"StatBoxRight\">\n                                <p>Reviews Posted</p>\n                                <span> {this.state.numReviews} </span>\n                            </div>\n                        </div>\n\n                        <div className=\"StatsRow\" id=\"StatsRow2\">\n                            <div className=\"StatBoxLeft\">\n                                <p>Average Completion</p>\n                                <span> {(Math.round(this.state.averageCompletion * 100) / 100).toFixed(2)} % </span>\n                            </div>\n                            <div className=\"StatBoxCenter\">\n                                <p>Average Playtime</p>\n                                <span> {(Math.round(this.state.averagePlaytime * 100) / 100).toFixed(2)} hours </span>\n                            </div>\n                            <div className=\"StatBoxRight\">\n                                <p>Review Score</p>\n                                <span> {this.state.reviewScore} </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id=\"TableSection\">\n                        <div id=\"StatsTitle\">\n                            <p>Lifetime Stats</p>\n                            {!(this.state.showLoading) || <div id=\"loadingIcon2\">\n                                <img src={loadingIcon} />\n                            </div>}\n                        </div>\n                        <div id=\"TotalStats\">\n                            <p> Total Games Attempted: {this.state.gamesAttempted} </p>\n                            <p> Total Games Supporting Achievements: {this.state.totalGames} (from a total of {this.state.gamesOwned} games owned) </p>\n                            {!(this.state.showLoading) || <p> Progress: processed {this.state.gamesProcessed} games out of {this.state.gamesOwned} </p>}\n                        </div>\n                        <table id=\"StatsTable\">\n                            <thead >\n                                <tr>\n                                    <th id=\"tableID\" className=\"tableHeader\">ID\n                                        <div className=\"sort\">\n                                            <button className=\"sortButton\" onClick={() => this.onSortDown(\"id\")}>\n                                                <span>{this.state.sortAscending ? '▲' : '▼'}</span></button>\n                                        </div>\n                                    </th>\n                                    <th id=\"tableTitle\" className=\"tableHeader\">Title\n                                        <div className=\"sort\">\n                                            <button className=\"sortButton\" onClick={() => this.onSortDown(\"title\")}>\n                                                <span>{this.state.sortAscending ? '▲' : '▼'}</span></button>\n                                        </div>\n                                    </th>\n                                    <th id=\"tableCompletion\" className=\"tableHeader\">Completion %\n                                        <div className=\"sort\">\n                                            <button className=\"sortButton\" onClick={() => this.onSortDown(\"completion\")}>\n                                                <span>{this.state.sortAscending ? '▲' : '▼'}</span></button>\n                                        </div>\n                                    </th>\n                                    <th id=\"tableUnlocked\" className=\"tableHeader\">Unlocked\n                                        <div className=\"sort\">\n                                            <button className=\"sortButton\" onClick={() => this.onSortDown(\"unlocked\")}>\n                                                <span>{this.state.sortAscending ? '▲' : '▼'}</span></button>\n                                        </div>\n                                    </th>\n                                    <th id=\"tableTotal\" className=\"tableHeader\">Total\n                                        <div className=\"sort\">\n                                            <button className=\"sortButton\" onClick={() => this.onSortDown(\"total\")}>\n                                                <span>{this.state.sortAscending ? '▲' : '▼'}</span></button>\n                                        </div>\n                                    </th>\n                                    <th id=\"tablePlaytime\" className=\"tableHeader\">Playtime\n                                        <div className=\"sort\">\n                                            <button className=\"sortButton\" onClick={() => this.onSortDown(\"playtime\")}>\n                                                <span>{this.state.sortAscending ? '▲' : '▼'}</span></button>\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.statsShown.map(row => (\n                                        <tr key={uid(row)}>\n                                            <td className=\"tableCell\">{row.id}</td>\n                                            <td className=\"tableCell\">{row.title}</td>\n                                            <td className=\"tableCell\">{typeof row.completion == 'string' ? row.completion :\n                                                (Math.round(row.completion * 100) / 100).toFixed(2)} </td>\n                                            <td className=\"tableCell\">{row.unlocked}</td>\n                                            <td className=\"tableCell\">{row.total}</td>\n                                            <td className=\"tableCell\">{(row.playtime).toFixed(2)} h </td>\n                                        </tr>\n                                    ))\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <br></br>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Analytics;"]},"metadata":{},"sourceType":"module"}