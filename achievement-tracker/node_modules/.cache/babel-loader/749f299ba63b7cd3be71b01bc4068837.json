{"ast":null,"code":"var _jsxFileName = \"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/react-components/Dashboard/index.js\";\nimport React from \"react\";\nimport { CurrentHeaderButton, HeaderButton, HeaderImage, HeadContainer, HeaderNavBar } from '../HeaderComponent';\nimport logo from './../../steamIcon2.png';\nimport profilePic from \"../AccountSettings/imgs/sampleProfilePic.jpg\";\nimport settingLogo from \"./../Dashboard/Static/settingLogo.png\";\nimport loadingIcon from \"./../Dashboard/Static/loadingSign.png\";\nimport { PersonalPic, BannerContainer, BannerLink, Friend, FriendList } from '../PersonalBanner';\nimport { AchievementContainer, Game } from '../Achievement';\nimport ChatBox from '../ChatBox';\nimport ProgressBar from '../Achievement/ProgressBar';\nimport { withRouter } from 'react-router-dom';\nimport { logout } from '../../actions/reactAuth';\nimport { getFriend, addFriends, deleteFriend, acceptFriend, declineFriend } from '../../actions/friend';\nimport { getImage } from '../../actions/profilePic';\nimport './style.css';\nimport { getReputation } from \"../../actions/reputation\";\nimport { getGameStats, getAchievementStats } from '../../actions/steamHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DashBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    const friendList = [];\n    const game = [{\n      gameImage: settingLogo,\n      gameName: \"Loading Game Data...\",\n      progress: \"NaN\",\n      gameId: \"\"\n    }];\n    const addFriendName = \"\";\n    const searchGameName = \"\"; // const isAdmin = UserKeys.getCurrUserAdminStatus() == 'false' ? false : true\n\n    const userName = this.props.app.state.currentUser;\n    this.state = {\n      friendList: friendList,\n      game: game,\n      image: \"\",\n      showChat: false,\n      chatName: \"\",\n      addFriendName: addFriendName,\n      searchGameName: searchGameName,\n      // isAdmin: isAdmin,\n      userName: userName,\n      reputation: 0,\n      showLoading: true\n    };\n    this.showChatBox = this.showChatBox.bind(this);\n    this.unShowChatBox = this.unShowChatBox.bind(this);\n    this.onChangeFriendUID = this.onChangeFriendUID.bind(this);\n    this.onSubmitFriendRequest = this.onSubmitFriendRequest.bind(this);\n    this.onChangeGameSearch = this.onChangeGameSearch.bind(this);\n    this.onSubmitGameSearch = this.onSubmitGameSearch.bind(this);\n    this.onClickGameRedirectAchivement = this.onClickGameRedirectAchivement.bind(this);\n    this.deleteFromFriend = this.deleteFromFriend.bind(this);\n    this.acceptFriendHandler = this.acceptFriendHandler.bind(this);\n    this.declineFriendHandler = this.declineFriendHandler.bind(this);\n  }\n\n  extractStats(data) {\n    let completion = -1;\n\n    if (data.achievements === undefined) {\n      return completion;\n    }\n\n    const max = data.achievements.length;\n    let achieved = 0;\n\n    for (let i = 0; i < max; i++) {\n      const element = data.achievements[i];\n\n      if (element.achieved === 1) {\n        achieved++;\n      }\n    }\n\n    completion = Math.floor(achieved / max * 100);\n    return completion;\n  }\n\n  async updatePercentages() {\n    let gameList = this.state.game;\n\n    for (let i = 0; i < gameList.length; i++) {\n      const game = gameList[i];\n      let completion = -1;\n      await getAchievementStats(game.gameId).then(res => {\n        completion = this.extractStats(res);\n      });\n\n      if (completion < 0) {\n        gameList.splice(i, 1);\n        i--;\n      } else {\n        game.progress = completion;\n      }\n\n      this.setState({\n        game: gameList\n      });\n    }\n\n    this.setState({\n      game: gameList\n    });\n    this.setState({\n      showLoading: false\n    });\n  } // updates games for current user\n\n\n  updateGames(data) {\n    let gameList = [];\n    const baseimgURL = 'http://media.steampowered.com/steamcommunity/public/images/apps/';\n    const games = data.games;\n\n    for (let i = 0; i < games.length; i++) {\n      let gameEntry = {};\n      const game = games[i];\n      gameEntry['gameName'] = game.name;\n      gameEntry['progress'] = 'Calculating...';\n      gameEntry['gameImage'] = `${baseimgURL}${game.appid}/${game.img_icon_url}.jpg`;\n      gameEntry['gameId'] = game.appid;\n      gameList.push(gameEntry);\n      this.setState({\n        game: gameList\n      });\n    }\n\n    this.setState({\n      game: gameList\n    });\n    this.updatePercentages();\n  }\n\n  componentDidMount() {\n    getFriend(this);\n    getReputation(this);\n    getImage(this.state.userName, this);\n    getGameStats().then(res => {\n      this.updateGames(res);\n    });\n  }\n\n  showChatBox(e) {\n    e.preventDefault();\n    let friendName = \"\";\n    let target = e.target;\n\n    if (target.tagName === \"path\") {\n      target = target.parentNode;\n    }\n\n    if (target.tagName === \"svg\") {\n      if (target.className.baseVal === \"deleteFriend\") {\n        return;\n      } else if (target.className.baseVal === \"friendPendingAccept\") {\n        return;\n      } else if (target.className.baseVal === \"friendPendingDecline\") {\n        return;\n      }\n    }\n\n    let parent = e.target;\n\n    while (parent.className !== \"friendContainer\") {\n      parent = parent.parentNode;\n    }\n\n    friendName = parent.children[0].children[1].innerHTML; //check if this friend is still on pending status\n\n    if (this.state.friendList.filter(i => {\n      return i.name == friendName;\n    })[0].onPending) {\n      alert(\"Accept your friend to chat\");\n      return;\n    }\n\n    this.setState({\n      chatName: friendName\n    });\n    this.setState({\n      showChat: true\n    });\n  }\n\n  unShowChatBox() {\n    this.setState({\n      showChat: false\n    });\n  }\n\n  deleteFromFriend(e) {\n    let parent = e.target;\n\n    if (parent.tagName === \"path\") {\n      parent = parent.parentNode;\n    }\n\n    if (parent.tagName === \"svg\") {\n      parent = parent.parentNode;\n    }\n\n    const friendName = parent.children[0].children[1].innerHTML;\n    deleteFriend(this, friendName);\n  }\n\n  acceptFriendHandler(e) {\n    let parent = e.target;\n\n    if (parent.tagName === \"path\") {\n      parent = parent.parentNode;\n    }\n\n    if (parent.tagName === \"svg\") {\n      parent = parent.parentNode;\n    }\n\n    const friendName = parent.parentNode.children[0].children[1].innerHTML;\n    acceptFriend(this, friendName);\n  }\n\n  declineFriendHandler(e) {\n    let parent = e.target;\n\n    if (parent.tagName === \"path\") {\n      parent = parent.parentNode;\n    }\n\n    if (parent.tagName === \"svg\") {\n      parent = parent.parentNode;\n    }\n\n    const friendName = parent.parentNode.children[0].children[1].innerHTML;\n    declineFriend(this, friendName);\n  }\n\n  onChangeFriendUID(e) {\n    this.setState({\n      addFriendName: e.target.value\n    });\n  }\n\n  async onSubmitFriendRequest(e) {\n    e.preventDefault(); //check if its user it self\n\n    if (this.state.addFriendName === this.state.userName) {\n      alert(\"Cannot add yourself!\");\n      this.setState({\n        addFriendName: \"\"\n      });\n      return;\n    } //check if friend already exist\n\n\n    for (let i = 0; i < this.state.friendList.length; i++) {\n      if (this.state.friendList[i].name == this.state.addFriendName) {\n        alert(\"Friend already exist in your friend list\");\n        this.setState({\n          addFriendName: \"\"\n        });\n        return;\n      }\n    }\n\n    try {\n      await addFriends(this);\n      this.setState({\n        addFriendName: \"\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  onChangeGameSearch(e) {\n    this.setState({\n      searchGameName: e.target.value\n    });\n  }\n\n  onSubmitGameSearch(e) {\n    e.preventDefault();\n    this.setState({\n      searchGameName: \"\"\n    });\n  }\n\n  onClickGameRedirectAchivement(e) {\n    const target = e.target;\n    let gameName;\n\n    if (target.className == \"gameContainer\") {\n      gameName = target.lastChild.lastChild.innerHTML;\n    } else if (target.className == \"gameBody\" || target.className == \"gameImage\" || target.className == \"vertical-row\") {\n      gameName = target.parentNode.lastChild.lastChild.innerHTML;\n    } else if (target.className == \"filledProgress\") {\n      gameName = target.parentNode.nextSibling.innerHTML;\n    } else {\n      gameName = target.parentNode.lastChild.innerHTML;\n    }\n\n    const gameId = this.state.game.filter(i => {\n      return i.gameName === gameName;\n    })[0].gameId;\n    this.props.history.push({\n      pathname: '/GameAchievements',\n      state: {\n        gameName: gameName,\n        userName: this.state.userName,\n        reputation: this.state.reputation,\n        gameId: gameId\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeadContainer, {\n        bgId: \"dashboard\",\n        children: /*#__PURE__*/_jsxDEV(HeaderNavBar, {\n          children: [/*#__PURE__*/_jsxDEV(HeaderImage, {\n            to: \"/dashboard\",\n            src: logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(CurrentHeaderButton, {\n              path: \"/Dashboard\",\n              children: \" Dashboard \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HeaderButton, {\n              path: \"/reviewForum\",\n              children: \"Forum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HeaderButton, {\n              path: \"/Analytics\",\n              children: \"Analytics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HeaderButton, {\n              path: \"/AccountSettings\",\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HeaderButton, {\n              path: \"/\",\n              logoutFunc: () => {\n                logout(this.props.app);\n              },\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: /*#__PURE__*/_jsxDEV(BannerContainer, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bannerUserInfo\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"bannerUserName\",\n                children: [\"User Name: \", this.state.userName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), this.state.image === \"\" ? /*#__PURE__*/_jsxDEV(PersonalPic, {\n              src: profilePic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(PersonalPic, {\n              src: \"data:image/png;base64,\" + this.state.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bannerReputation\",\n              children: [\"Reputation: \", this.state.reputation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bannerLeftLinkGroup\",\n              children: [/*#__PURE__*/_jsxDEV(BannerLink, {\n                path: \"https://discord.com\",\n                children: \"Discord\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(BannerLink, {\n                path: \"https://twitter.com\",\n                children: \"Twitter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(BannerLink, {\n                path: \"https://www.facebook.com\",\n                children: \"Facebook\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(BannerLink, {\n                path: \"https://store.steampowered.com\",\n                children: \"Steam\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"searchGame\",\n            onSubmit: e => this.onSubmitGameSearch(e),\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"searchGameInput\",\n              placeholder: \"Search for a Game...\",\n              value: this.state.searchGameName,\n              onChange: e => this.onChangeGameSearch(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AchievementContainer, {\n            bodyId: 'shrink',\n            children: this.state.game.map((item, i) => {\n              if (item.gameName.toLowerCase().startsWith(this.state.searchGameName.toLowerCase())) {\n                return /*#__PURE__*/_jsxDEV(Game, {\n                  image: item.gameImage,\n                  redirect: this.onClickGameRedirectAchivement,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"achivementProgress\",\n                    children: item.progress + '%'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n                    completed: item.progress\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"gameInfo\",\n                    children: item.gameName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 45\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 41\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this), !this.state.showLoading || /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"loadingIcon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: loadingIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: /*#__PURE__*/_jsxDEV(BannerContainer, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rightBannerTitle\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"rightBannerTitleName\",\n                children: \"Chat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"addFriendForm\",\n                onSubmit: e => this.onSubmitFriendRequest(e),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"addFriendInput\",\n                  placeholder: \"Enter Friend Name\",\n                  value: this.state.addFriendName,\n                  onChange: e => this.onChangeFriendUID(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"addFriendButton\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FriendList, {\n              children: this.state.friendList.map((item, i) => {\n                return /*#__PURE__*/_jsxDEV(Friend, {\n                  chat: this.showChatBox,\n                  deleteFriend: this.deleteFromFriend,\n                  pendingStatus: item.onPending,\n                  accept: this.acceptFriendHandler,\n                  decline: this.declineFriendHandler,\n                  children: item.name\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 44\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), this.state.showChat && /*#__PURE__*/_jsxDEV(ChatBox, {\n          userName: this.state.userName,\n          friendName: this.state.chatName,\n          showChatOption: this.unShowChatBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouter(DashBoard);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/react-components/Dashboard/index.js"],"names":["React","CurrentHeaderButton","HeaderButton","HeaderImage","HeadContainer","HeaderNavBar","logo","profilePic","settingLogo","loadingIcon","PersonalPic","BannerContainer","BannerLink","Friend","FriendList","AchievementContainer","Game","ChatBox","ProgressBar","withRouter","logout","getFriend","addFriends","deleteFriend","acceptFriend","declineFriend","getImage","getReputation","getGameStats","getAchievementStats","DashBoard","Component","constructor","props","friendList","game","gameImage","gameName","progress","gameId","addFriendName","searchGameName","userName","app","state","currentUser","image","showChat","chatName","reputation","showLoading","showChatBox","bind","unShowChatBox","onChangeFriendUID","onSubmitFriendRequest","onChangeGameSearch","onSubmitGameSearch","onClickGameRedirectAchivement","deleteFromFriend","acceptFriendHandler","declineFriendHandler","extractStats","data","completion","achievements","undefined","max","length","achieved","i","element","Math","floor","updatePercentages","gameList","then","res","splice","setState","updateGames","baseimgURL","games","gameEntry","name","appid","img_icon_url","push","componentDidMount","e","preventDefault","friendName","target","tagName","parentNode","className","baseVal","parent","children","innerHTML","filter","onPending","alert","value","error","console","log","lastChild","nextSibling","history","pathname","render","map","item","toLowerCase","startsWith"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { CurrentHeaderButton, HeaderButton, HeaderImage, HeadContainer, HeaderNavBar } from '../HeaderComponent'\nimport logo from './../../steamIcon2.png'\nimport profilePic from \"../AccountSettings/imgs/sampleProfilePic.jpg\"\nimport settingLogo from \"./../Dashboard/Static/settingLogo.png\"\nimport loadingIcon from \"./../Dashboard/Static/loadingSign.png\"\nimport { PersonalPic, BannerContainer, BannerLink, Friend, FriendList } from '../PersonalBanner'\nimport { AchievementContainer, Game } from '../Achievement'\nimport ChatBox from '../ChatBox';\nimport ProgressBar from '../Achievement/ProgressBar'\nimport { withRouter } from 'react-router-dom'\nimport { logout } from '../../actions/reactAuth'\nimport { getFriend, addFriends, deleteFriend, acceptFriend, declineFriend } from '../../actions/friend'\nimport { getImage } from '../../actions/profilePic'\nimport './style.css'\nimport { getReputation } from \"../../actions/reputation\";\nimport { getGameStats, getAchievementStats } from '../../actions/steamHelpers'\n\n\n\nclass DashBoard extends React.Component {\n    constructor(props) {\n        super(props)\n        const friendList = []\n        const game = [\n            { gameImage: settingLogo, gameName: \"Loading Game Data...\", progress: \"NaN\", gameId: \"\" },\n        ]\n        const addFriendName = \"\"\n        const searchGameName = \"\"\n\n        // const isAdmin = UserKeys.getCurrUserAdminStatus() == 'false' ? false : true\n        const userName = this.props.app.state.currentUser\n\n        this.state = {\n            friendList: friendList,\n            game: game,\n            image: \"\",\n            showChat: false,\n            chatName: \"\",\n            addFriendName: addFriendName,\n            searchGameName: searchGameName,\n            // isAdmin: isAdmin,\n            userName: userName,\n            reputation: 0,\n            showLoading: true\n        }\n        this.showChatBox = this.showChatBox.bind(this)\n        this.unShowChatBox = this.unShowChatBox.bind(this)\n        this.onChangeFriendUID = this.onChangeFriendUID.bind(this)\n        this.onSubmitFriendRequest = this.onSubmitFriendRequest.bind(this)\n        this.onChangeGameSearch = this.onChangeGameSearch.bind(this)\n        this.onSubmitGameSearch = this.onSubmitGameSearch.bind(this)\n        this.onClickGameRedirectAchivement = this.onClickGameRedirectAchivement.bind(this)\n        this.deleteFromFriend = this.deleteFromFriend.bind(this)\n        this.acceptFriendHandler = this.acceptFriendHandler.bind(this)\n        this.declineFriendHandler = this.declineFriendHandler.bind(this)\n    }\n\n    extractStats(data) {\n        let completion = -1\n        if (data.achievements === undefined) {\n            return completion\n        }\n        const max = data.achievements.length\n        let achieved = 0\n        for (let i = 0; i < max; i++) {\n            const element = data.achievements[i];\n            if (element.achieved === 1) {\n                achieved++\n            }\n        }\n        completion = Math.floor((achieved / max) * 100)\n        return completion\n    }\n\n    async updatePercentages() {\n        let gameList = this.state.game\n        for (let i = 0; i < gameList.length; i++) {\n            const game = gameList[i];\n            let completion = -1\n            await getAchievementStats(game.gameId)\n                .then(res => { completion = this.extractStats(res) })\n            if (completion < 0) {\n                gameList.splice(i, 1)\n                i--\n            } else {\n                game.progress = completion\n            }\n            this.setState({ game: gameList })\n        }\n        this.setState({ game: gameList })\n        this.setState({ showLoading: false })\n    }\n\n    // updates games for current user\n    updateGames(data) {\n        let gameList = []\n        const baseimgURL = 'http://media.steampowered.com/steamcommunity/public/images/apps/'\n        const games = data.games\n        for (let i = 0; i < games.length; i++) {\n            let gameEntry = {}\n            const game = games[i]\n            gameEntry['gameName'] = game.name\n            gameEntry['progress'] = 'Calculating...'\n            gameEntry['gameImage'] = `${baseimgURL}${game.appid}/${game.img_icon_url}.jpg`\n            gameEntry['gameId'] = game.appid\n            gameList.push(gameEntry)\n            this.setState({ game: gameList })\n        }\n        this.setState({ game: gameList })\n        this.updatePercentages()\n    }\n\n    componentDidMount() {\n        getFriend(this)\n        getReputation(this)\n        getImage(this.state.userName, this)\n        getGameStats()\n            .then(res => {\n                this.updateGames(res)\n            })\n    }\n\n    showChatBox(e) {\n        e.preventDefault();\n        let friendName = \"\";\n        let target = e.target;\n        if (target.tagName === \"path\") {\n            target = target.parentNode\n        }\n        if (target.tagName === \"svg\") {\n            if (target.className.baseVal === \"deleteFriend\") {\n                return;\n            } else if (target.className.baseVal === \"friendPendingAccept\") {\n                return;\n            } else if (target.className.baseVal === \"friendPendingDecline\") {\n                return;\n            }\n        }\n        let parent = e.target\n        while (parent.className !== \"friendContainer\") {\n            parent = parent.parentNode\n        }\n        friendName = parent.children[0].children[1].innerHTML\n        //check if this friend is still on pending status\n        if (this.state.friendList.filter(i => { return i.name == friendName })[0].onPending) {\n            alert(\"Accept your friend to chat\")\n            return;\n        }\n        this.setState({ chatName: friendName })\n        this.setState({ showChat: true })\n    }\n\n    unShowChatBox() {\n        this.setState({ showChat: false })\n    }\n\n    deleteFromFriend(e) {\n        let parent = e.target\n        if (parent.tagName === \"path\") {\n            parent = parent.parentNode\n        }\n        if (parent.tagName === \"svg\") {\n            parent = parent.parentNode\n        }\n        const friendName = parent.children[0].children[1].innerHTML\n        deleteFriend(this, friendName)\n    }\n\n    acceptFriendHandler(e) {\n        let parent = e.target\n        if (parent.tagName === \"path\") {\n            parent = parent.parentNode\n        }\n        if (parent.tagName === \"svg\") {\n            parent = parent.parentNode\n        }\n        const friendName = parent.parentNode.children[0].children[1].innerHTML\n        acceptFriend(this, friendName)\n    }\n\n    declineFriendHandler(e) {\n        let parent = e.target\n        if (parent.tagName === \"path\") {\n            parent = parent.parentNode\n        }\n        if (parent.tagName === \"svg\") {\n            parent = parent.parentNode\n        }\n        const friendName = parent.parentNode.children[0].children[1].innerHTML\n        declineFriend(this, friendName)\n    }\n\n    onChangeFriendUID(e) {\n        this.setState({ addFriendName: e.target.value })\n    }\n\n    async onSubmitFriendRequest(e) {\n        e.preventDefault()\n        //check if its user it self\n        if (this.state.addFriendName === this.state.userName) {\n            alert(\"Cannot add yourself!\")\n            this.setState({ addFriendName: \"\" })\n            return;\n        }\n        //check if friend already exist\n        for (let i = 0; i < this.state.friendList.length; i++) {\n            if (this.state.friendList[i].name == this.state.addFriendName) {\n                alert(\"Friend already exist in your friend list\")\n                this.setState({ addFriendName: \"\" })\n                return;\n            }\n        }\n        try {\n            await addFriends(this)\n            this.setState({ addFriendName: \"\" })\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    onChangeGameSearch(e) {\n        this.setState({ searchGameName: e.target.value })\n    }\n\n    onSubmitGameSearch(e) {\n        e.preventDefault()\n        this.setState({ searchGameName: \"\" })\n    }\n\n    onClickGameRedirectAchivement(e) {\n        const target = e.target\n        let gameName;\n        if (target.className == \"gameContainer\") {\n            gameName = target.lastChild.lastChild.innerHTML;\n        } else if (target.className == \"gameBody\" || target.className == \"gameImage\" || target.className == \"vertical-row\") {\n            gameName = target.parentNode.lastChild.lastChild.innerHTML;\n        } else if (target.className == \"filledProgress\") {\n            gameName = target.parentNode.nextSibling.innerHTML;\n        } else {\n            gameName = target.parentNode.lastChild.innerHTML;\n        }\n        const gameId = this.state.game.filter((i) => { return i.gameName === gameName })[0].gameId\n        this.props.history.push({\n            pathname: '/GameAchievements',\n            state: {\n                gameName: gameName,\n                userName: this.state.userName,\n                reputation: this.state.reputation,\n                gameId: gameId\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <HeadContainer bgId={\"dashboard\"}>\n                    <HeaderNavBar>\n                        <HeaderImage to='/dashboard' src={logo} />\n                        <div className='group'>\n                            {/* {this.state.isAdmin && (<HeaderButton path='/admin'>Admin</HeaderButton>)} */}\n                            <CurrentHeaderButton path=\"/Dashboard\"> Dashboard </CurrentHeaderButton>\n                            <HeaderButton path='/reviewForum'>Forum</HeaderButton>\n                            <HeaderButton path='/Analytics'>Analytics</HeaderButton>\n                            <HeaderButton path='/AccountSettings'>Settings</HeaderButton>\n                            <HeaderButton path='/' logoutFunc={() => { logout(this.props.app) }}>Log Out</HeaderButton>\n                        </div>\n                    </HeaderNavBar>\n                </HeadContainer>\n                <div className='dashboard'>\n                    <div className='left'>\n                        <BannerContainer>\n                            <div className=\"bannerUserInfo\">\n                                <div id=\"bannerUserName\">User Name: {this.state.userName}</div>\n                            </div>\n                            {this.state.image === \"\" ?\n                                <PersonalPic src={profilePic} /> :\n                                <PersonalPic src={\"data:image/png;base64,\" + this.state.image} />\n                            }\n                            <span className=\"bannerReputation\">Reputation: {this.state.reputation}</span>\n                            <div className=\"bannerLeftLinkGroup\">\n                                <BannerLink path=\"https://discord.com\">Discord</BannerLink>\n                                <BannerLink path='https://twitter.com'>Twitter</BannerLink>\n                                <BannerLink path='https://www.facebook.com'>Facebook</BannerLink>\n                                <BannerLink path='https://store.steampowered.com'>Steam</BannerLink>\n                            </div>\n                        </BannerContainer>\n                    </div>\n                    <div className='middle'>\n                        <form className=\"searchGame\" onSubmit={e => this.onSubmitGameSearch(e)}>\n                            <input\n                                className=\"searchGameInput\"\n                                placeholder=\"Search for a Game...\"\n                                value={this.state.searchGameName}\n                                onChange={e => this.onChangeGameSearch(e)}\n                            />\n                        </form>\n                        <AchievementContainer bodyId={'shrink'}>\n                            {this.state.game.map((item, i) => {\n                                if (item.gameName.toLowerCase().startsWith(this.state.searchGameName.toLowerCase())) {\n                                    return (\n                                        <Game key={i} image={item.gameImage} redirect={this.onClickGameRedirectAchivement}>\n                                            <span className=\"achivementProgress\">{item.progress + '%'}</span>\n                                            <ProgressBar completed={item.progress} />\n                                            <div className=\"gameInfo\">{item.gameName}</div>\n                                        </Game>\n                                    )\n                                }\n                            })}\n                        </AchievementContainer>\n                        {!(this.state.showLoading) || <div id=\"loadingIcon\">\n                            <img src={loadingIcon} />\n                        </div>}\n                    </div>\n                    <div className='right'>\n                        <BannerContainer>\n                            <div className=\"rightBannerTitle\">\n                                <p className=\"rightBannerTitleName\">Chat</p>\n                                <form className=\"addFriendForm\" onSubmit={e => this.onSubmitFriendRequest(e)}>\n                                    <input\n                                        className=\"addFriendInput\"\n                                        placeholder=\"Enter Friend Name\"\n                                        value={this.state.addFriendName}\n                                        onChange={e => this.onChangeFriendUID(e)}\n                                    />\n                                    <button className=\"addFriendButton\">Add</button>\n                                </form>\n                            </div>\n                            <FriendList>\n                                {this.state.friendList.map((item, i) => {\n                                    return <Friend\n                                        key={i}\n                                        chat={this.showChatBox}\n                                        deleteFriend={this.deleteFromFriend}\n                                        pendingStatus={item.onPending}\n                                        accept={this.acceptFriendHandler}\n                                        decline={this.declineFriendHandler}\n                                    >\n                                        {item.name}\n                                    </Friend>\n                                })}\n                            </FriendList>\n                        </BannerContainer>\n                    </div>\n                    {this.state.showChat &&\n                        (<ChatBox\n                            userName={this.state.userName}\n                            friendName={this.state.chatName}\n                            showChatOption={this.unShowChatBox} />)}\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withRouter(DashBoard);"]},"metadata":{},"sourceType":"module"}