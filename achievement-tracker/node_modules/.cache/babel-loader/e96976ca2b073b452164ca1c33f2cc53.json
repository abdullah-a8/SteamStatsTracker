{"ast":null,"code":"import _regeneratorRuntime from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{uid}from\"react-uid\";import sampleProfilePic from\"../AccountSettings/imgs/sampleProfilePic.jpg\";import logo from'./../../steamIcon2.png';import loadingIcon from\"./../Dashboard/Static/loadingSign.png\";import{HeaderButton,CurrentHeaderButton,HeadContainer,HeaderNavBar,HeaderImage}from'../HeaderComponent';import{logout}from'../../actions/reactAuth';import{getGameStats,getAchievementStats}from'../../actions/steamHelpers';import{getUserReviews}from'../../actions/review';import{getReputation,updateReputation}from'../../actions/reputation';import{updateUsernameReputation}from'../../actions/review';import{getImage}from'../../actions/profilePic';import\"./Analytics.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var prettyMilliseconds=require('pretty-ms');// All of the statistics listed on this page, both in the banner and in the below table, are hardcoded sample values.\n// In phase 2, we will use API calls to populate this part of the user's profile with the relevant statistics we pull.\nvar Analytics=/*#__PURE__*/function(_React$Component){_inherits(Analytics,_React$Component);var _super=_createSuper(Analytics);function Analytics(props){var _this;_classCallCheck(this,Analytics);_this=_super.call(this,props);var stats=[{id:0,title:\"Loading Game Info...\",unlocked:0,total:0,playtime:0,completion:NaN}];var userName=_this.props.app.state.currentUser;_this.state={userName:userName,stats:stats,statsShown:[],userReviews:[],numReviews:0,reviewScore:0,reputation:1,totalAchievements:0,averageCompletion:0,totalPlaytime:0,averagePlaytime:0,gamesOwned:0,totalGames:0,gamesAttempted:0,gamesProcessed:0,showLoading:true,sortAscending:false,joinDate:'',image:\"\"};return _this;}_createClass(Analytics,[{key:\"onSortDown\",value:function onSortDown(column){if(this.state.sortAscending){this.setState({sortAscending:false});this.onSortUp(column);return;}this.setState({sortAscending:true});var stats=this.state.statsShown;stats.sort(function(a,b){if(typeof a[column]!==typeof b[column]){return typeof a[column]=='string'?1:-1;}if(typeof a[column]==\"string\"){return a[column].localeCompare(b[column]);}return a[column]-b[column];});this.setState({stats:stats});}},{key:\"onSortUp\",value:function onSortUp(column){var stats=this.state.statsShown;stats.sort(function(a,b){if(typeof a[column]!==typeof b[column]){return typeof a[column]=='string'?1:-1;}if(typeof a[column]==\"string\"){return b[column].localeCompare(a[column]);}return b[column]-a[column];});this.setState({stats:stats});}},{key:\"calculateReputation\",value:function calculateReputation(){var completion=this.state.averageCompletion;var achievements=this.state.totalAchievements;var playtime=this.state.totalPlaytime;var reviewScore=this.state.reviewScore;var gamesOwned=this.state.totalGames;var completionComponent;var achievementMultiplier;var playtimeComponent;var reviewComponent;var gameComponent;if(completion>90){completionComponent=3;}else{completionComponent=completion/30;}if(achievements>2000){achievementMultiplier=1;}else{achievementMultiplier=achievements/2000;}if(playtime>5000){playtimeComponent=2;}else{playtimeComponent=playtime/2500;}if(reviewScore>100){reviewComponent=3;}else{reviewComponent=reviewScore/30;}if(gamesOwned>100){gameComponent=2;}else{gameComponent=gamesOwned/50;}var rawReputation=achievementMultiplier*completionComponent+playtimeComponent+reviewComponent+gameComponent;var reputation=Math.floor(rawReputation);this.setState({reputation:reputation});updateReputation(this,reputation);updateUsernameReputation(this.state.userName,reputation,false);return reputation;}},{key:\"extractStats\",value:function extractStats(data){var completion=-1;if(data.achievements===undefined){return completion;}var max=data.achievements.length;var achieved=0;for(var i=0;i<max;i++){var element=data.achievements[i];if(element.achieved===1){achieved++;}}completion=achieved/max*100;return[achieved,max,completion];}},{key:\"updateBannerStats\",value:function updateBannerStats(){var tableStats=this.state.stats;var totalAchievements=0;var totalPlaytime=0;var totalCompletion=0;var numGames=0;var gamesWithAchievement=0;for(var i=0;i<tableStats.length;i++){var game=tableStats[i];if(game.completion>0){totalAchievements+=game.unlocked;totalCompletion+=game.completion;numGames++;}if(typeof game.completion!=='string'){gamesWithAchievement++;}totalPlaytime+=game.playtime;}this.setState({totalGames:gamesWithAchievement});this.setState({gamesAttempted:numGames});this.setState({totalAchievements:totalAchievements});this.setState({totalPlaytime:totalPlaytime});this.setState({averagePlaytime:totalPlaytime/tableStats.filter(function(game){return game.playtime>0.1;}).length});if(numGames>0){this.setState({averageCompletion:totalCompletion/numGames});}}},{key:\"updateAsync\",value:function(){var _updateAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(game){var _this2=this;var gameStats;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:gameStats=-1;_context.next=3;return getAchievementStats(game.id).then(function(res){gameStats=_this2.extractStats(res);});case 3:if(gameStats===-1){game.unlocked='-';game.total='-';game.completion='-';}else{game.unlocked=gameStats[0];game.total=gameStats[1];game.completion=gameStats[2];this.setState({totalGames:this.state.totalGames+1});this.setState({totalAchievements:this.state.totalAchievements+gameStats[0]});if(gameStats[2]>0){this.setState({gamesAttempted:this.state.gamesAttempted+1});}}this.setState({gamesProcessed:this.state.gamesProcessed+1});case 5:case\"end\":return _context.stop();}}},_callee,this);}));function updateAsync(_x){return _updateAsync.apply(this,arguments);}return updateAsync;}()},{key:\"updateAchievements\",value:function(){var _updateAchievements=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _this3=this;var gameList,step,i;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:gameList=this.state.stats;this.setState({statsShown:gameList.slice()});step=6;i=0;case 4:if(!(i<gameList.length)){_context2.next=11;break;}this.updateBannerStats();_context2.next=8;return Promise.all(gameList.slice(i,i+step).map(function(game){return _this3.updateAsync(game);}));case 8:i+=step;_context2.next=4;break;case 11:this.updateBannerStats();this.setState({showLoading:false});this.calculateReputation();case 14:case\"end\":return _context2.stop();}}},_callee2,this);}));function updateAchievements(){return _updateAchievements.apply(this,arguments);}return updateAchievements;}()},{key:\"updateStats\",value:function updateStats(data){var gameList=[];var games=data.games;for(var i=0;i<games.length;i++){var gameEntry={};var game=games[i];gameEntry['title']=game.name;gameEntry['unlocked']='Calculating...';gameEntry['total']='Calculating...';gameEntry['completion']='Calculating...';gameEntry['playtime']=game.playtime_forever/60;gameEntry['id']=game.appid;gameList.push(gameEntry);this.setState({stats:gameList});}this.setState({gamesOwned:gameList.length});this.setState({stats:gameList});this.updateAchievements();}},{key:\"getReviewStats\",value:function getReviewStats(data){var reviews=data;var numReviews=reviews.length;var score=0;for(var i=0;i<reviews.length;i++){score+=reviews[i].upvotes;score-=reviews[i].downvotes;}this.setState({userReviews:reviews});this.setState({numReviews:numReviews});this.setState({reviewScore:score});}// sets the user membership length to a human readable string\n},{key:\"setMemberAge\",value:function(){var _setMemberAge=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var joined,now,joinedDate,age_ms,ageString,stopPoint;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"/users/joindate/\".concat(this.state.userName)).then(function(res){return res.json();}).then(function(json){joined=json.time;});case 2:now=new Date();joinedDate=new Date(joined);age_ms=now.getTime()-joinedDate.getTime();ageString=prettyMilliseconds(age_ms)+'  ';stopPoint=ageString.split(' ',2).join(' ').length;this.setState({joinDate:'Member for '+ageString.slice(0,stopPoint)});case 8:case\"end\":return _context3.stop();}}},_callee3,this);}));function setMemberAge(){return _setMemberAge.apply(this,arguments);}return setMemberAge;}()},{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var _this4=this;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:this.setMemberAge();getGameStats().then(function(res){_this4.updateStats(res);});_context4.next=4;return getUserReviews(this,this.state.userName).then(function(res){_this4.getReviewStats(res);});case 4:getReputation(this);getImage(this.state.userName,this);case 6:case\"end\":return _context4.stop();}}},_callee4,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){var _this5=this;return/*#__PURE__*/_jsxs(\"div\",{id:\"AnalyticsPage\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"HeaderSection\",children:/*#__PURE__*/_jsx(HeadContainer,{bgId:\"dashboard\",children:/*#__PURE__*/_jsxs(HeaderNavBar,{children:[/*#__PURE__*/_jsx(HeaderImage,{to:\"/dashboard\",src:logo}),/*#__PURE__*/_jsxs(\"div\",{className:\"group\",children:[/*#__PURE__*/_jsx(HeaderButton,{path:\"/Dashboard\",children:\"Dashboard\"}),/*#__PURE__*/_jsx(HeaderButton,{path:\"/ReviewForum\",children:\"Forum\"}),/*#__PURE__*/_jsx(CurrentHeaderButton,{path:\"/Analytics\",children:\"Analytics\"}),/*#__PURE__*/_jsx(HeaderButton,{path:\"/AccountSettings\",children:\"Settings\"}),/*#__PURE__*/_jsx(HeaderButton,{path:\"/\",logoutFunc:function logoutFunc(){logout(_this5.props.app);},children:\"Log Out\"})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{id:\"BodySection\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"TitleSection\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Analytics\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"StatsSection\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"StatsHeader\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"StatsUser\",children:[this.state.image===\"\"?/*#__PURE__*/_jsx(\"img\",{id:\"StatsProfilePic\",src:sampleProfilePic}):/*#__PURE__*/_jsx(\"img\",{id:\"StatsProfilePic\",src:\"data:image/png;base64,\"+this.state.image}),/*#__PURE__*/_jsxs(\"div\",{id:\"StatsUserCaption\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\" \",this.state.userName,\" \"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\" \",this.state.joinDate,\" \"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"StatsReputation\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Reputation Level:\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"ReputationContainer\",children:[!this.state.showLoading||/*#__PURE__*/_jsx(\"div\",{id:\"loadingIcon1\",children:/*#__PURE__*/_jsx(\"img\",{src:loadingIcon})}),/*#__PURE__*/_jsxs(\"span\",{children:[\" \",this.state.reputation,\" \"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"StatsRow\",id:\"StatsRow1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"StatBoxLeft\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Total Achievements\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\" \",this.state.totalAchievements,\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"StatBoxCenter\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Total Playtime\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\" \",(Math.round(this.state.totalPlaytime*100)/100).toFixed(2),\" hours \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"StatBoxRight\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Reviews Posted\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\" \",this.state.numReviews,\" \"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"StatsRow\",id:\"StatsRow2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"StatBoxLeft\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Average Completion\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\" \",(Math.round(this.state.averageCompletion*100)/100).toFixed(2),\" % \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"StatBoxCenter\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Average Playtime\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\" \",(Math.round(this.state.averagePlaytime*100)/100).toFixed(2),\" hours \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"StatBoxRight\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Review Score\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\" \",this.state.reviewScore,\" \"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"TableSection\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"StatsTitle\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Lifetime Stats\"}),!this.state.showLoading||/*#__PURE__*/_jsx(\"div\",{id:\"loadingIcon2\",children:/*#__PURE__*/_jsx(\"img\",{src:loadingIcon})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"TotalStats\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\" Total Games Attempted: \",this.state.gamesAttempted,\" \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Total Games Supporting Achievements: \",this.state.totalGames,\" (from a total of \",this.state.gamesOwned,\" games owned) \"]}),!this.state.showLoading||/*#__PURE__*/_jsxs(\"p\",{children:[\" Progress: processed \",this.state.gamesProcessed,\" games out of \",this.state.gamesOwned,\" \"]})]}),/*#__PURE__*/_jsxs(\"table\",{id:\"StatsTable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"th\",{id:\"tableID\",className:\"tableHeader\",children:[\"ID\",/*#__PURE__*/_jsx(\"div\",{className:\"sort\",children:/*#__PURE__*/_jsx(\"button\",{className:\"sortButton\",onClick:function onClick(){return _this5.onSortDown(\"id\");},children:/*#__PURE__*/_jsx(\"span\",{children:this.state.sortAscending?'▲':'▼'})})})]}),/*#__PURE__*/_jsxs(\"th\",{id:\"tableTitle\",className:\"tableHeader\",children:[\"Title\",/*#__PURE__*/_jsx(\"div\",{className:\"sort\",children:/*#__PURE__*/_jsx(\"button\",{className:\"sortButton\",onClick:function onClick(){return _this5.onSortDown(\"title\");},children:/*#__PURE__*/_jsx(\"span\",{children:this.state.sortAscending?'▲':'▼'})})})]}),/*#__PURE__*/_jsxs(\"th\",{id:\"tableCompletion\",className:\"tableHeader\",children:[\"Completion %\",/*#__PURE__*/_jsx(\"div\",{className:\"sort\",children:/*#__PURE__*/_jsx(\"button\",{className:\"sortButton\",onClick:function onClick(){return _this5.onSortDown(\"completion\");},children:/*#__PURE__*/_jsx(\"span\",{children:this.state.sortAscending?'▲':'▼'})})})]}),/*#__PURE__*/_jsxs(\"th\",{id:\"tableUnlocked\",className:\"tableHeader\",children:[\"Unlocked\",/*#__PURE__*/_jsx(\"div\",{className:\"sort\",children:/*#__PURE__*/_jsx(\"button\",{className:\"sortButton\",onClick:function onClick(){return _this5.onSortDown(\"unlocked\");},children:/*#__PURE__*/_jsx(\"span\",{children:this.state.sortAscending?'▲':'▼'})})})]}),/*#__PURE__*/_jsxs(\"th\",{id:\"tableTotal\",className:\"tableHeader\",children:[\"Total\",/*#__PURE__*/_jsx(\"div\",{className:\"sort\",children:/*#__PURE__*/_jsx(\"button\",{className:\"sortButton\",onClick:function onClick(){return _this5.onSortDown(\"total\");},children:/*#__PURE__*/_jsx(\"span\",{children:this.state.sortAscending?'▲':'▼'})})})]}),/*#__PURE__*/_jsxs(\"th\",{id:\"tablePlaytime\",className:\"tableHeader\",children:[\"Playtime\",/*#__PURE__*/_jsx(\"div\",{className:\"sort\",children:/*#__PURE__*/_jsx(\"button\",{className:\"sortButton\",onClick:function onClick(){return _this5.onSortDown(\"playtime\");},children:/*#__PURE__*/_jsx(\"span\",{children:this.state.sortAscending?'▲':'▼'})})})]})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:this.state.statsShown.map(function(row){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"tableCell\",children:row.id}),/*#__PURE__*/_jsx(\"td\",{className:\"tableCell\",children:row.title}),/*#__PURE__*/_jsxs(\"td\",{className:\"tableCell\",children:[typeof row.completion=='string'?row.completion:(Math.round(row.completion*100)/100).toFixed(2),\" \"]}),/*#__PURE__*/_jsx(\"td\",{className:\"tableCell\",children:row.unlocked}),/*#__PURE__*/_jsx(\"td\",{className:\"tableCell\",children:row.total}),/*#__PURE__*/_jsxs(\"td\",{className:\"tableCell\",children:[row.playtime.toFixed(2),\" h \"]})]},uid(row));})})]})]}),/*#__PURE__*/_jsx(\"br\",{})]})]});}}]);return Analytics;}(React.Component);export default Analytics;","map":{"version":3,"sources":["/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/react-components/Analytics/index.js"],"names":["React","uid","sampleProfilePic","logo","loadingIcon","HeaderButton","CurrentHeaderButton","HeadContainer","HeaderNavBar","HeaderImage","logout","getGameStats","getAchievementStats","getUserReviews","getReputation","updateReputation","updateUsernameReputation","getImage","prettyMilliseconds","require","Analytics","props","stats","id","title","unlocked","total","playtime","completion","NaN","userName","app","state","currentUser","statsShown","userReviews","numReviews","reviewScore","reputation","totalAchievements","averageCompletion","totalPlaytime","averagePlaytime","gamesOwned","totalGames","gamesAttempted","gamesProcessed","showLoading","sortAscending","joinDate","image","column","setState","onSortUp","sort","a","b","localeCompare","achievements","completionComponent","achievementMultiplier","playtimeComponent","reviewComponent","gameComponent","rawReputation","Math","floor","data","undefined","max","length","achieved","i","element","tableStats","totalCompletion","numGames","gamesWithAchievement","game","filter","gameStats","then","res","extractStats","gameList","slice","step","updateBannerStats","Promise","all","map","updateAsync","calculateReputation","games","gameEntry","name","playtime_forever","appid","push","updateAchievements","reviews","score","upvotes","downvotes","fetch","json","joined","time","now","Date","joinedDate","age_ms","getTime","ageString","stopPoint","split","join","setMemberAge","updateStats","getReviewStats","round","toFixed","onSortDown","row","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { uid } from \"react-uid\"\n\nimport sampleProfilePic from \"../AccountSettings/imgs/sampleProfilePic.jpg\"\nimport logo from './../../steamIcon2.png'\nimport loadingIcon from \"./../Dashboard/Static/loadingSign.png\"\n\nimport { HeaderButton, CurrentHeaderButton, HeadContainer, HeaderNavBar, HeaderImage } from '../HeaderComponent'\nimport { logout } from '../../actions/reactAuth'\nimport { getGameStats, getAchievementStats } from '../../actions/steamHelpers'\nimport { getUserReviews } from '../../actions/review'\nimport { getReputation, updateReputation } from '../../actions/reputation'\nimport { updateUsernameReputation } from '../../actions/review'\nimport { getImage } from '../../actions/profilePic'\n\nimport \"./Analytics.css\"\n\nconst prettyMilliseconds = require('pretty-ms');\n\n// All of the statistics listed on this page, both in the banner and in the below table, are hardcoded sample values.\n// In phase 2, we will use API calls to populate this part of the user's profile with the relevant statistics we pull.\n\nclass Analytics extends React.Component {\n    constructor(props) {\n        super(props)\n        const stats = [\n            { id: 0, title: \"Loading Game Info...\", unlocked: 0, total: 0, playtime: 0, completion: NaN }\n        ]\n        const userName = this.props.app.state.currentUser\n\n        this.state = {\n            userName: userName,\n            stats: stats,\n            statsShown: [],\n            userReviews: [],\n            numReviews: 0,\n            reviewScore: 0,\n            reputation: 1,\n            totalAchievements: 0,\n            averageCompletion: 0,\n            totalPlaytime: 0,\n            averagePlaytime: 0,\n            gamesOwned: 0,\n            totalGames: 0,\n            gamesAttempted: 0,\n            gamesProcessed: 0,\n            showLoading: true,\n            sortAscending: false,\n            joinDate: '',\n            image: \"\"\n        }\n    }\n\n    onSortDown(column) {\n        if (this.state.sortAscending) {\n            this.setState({ sortAscending: false })\n            this.onSortUp(column)\n            return\n        }\n        this.setState({ sortAscending: true })\n        let stats = this.state.statsShown\n        stats.sort((a, b) => {\n            if (typeof (a[column]) !== typeof (b[column])) {\n                return typeof (a[column]) == 'string' ? 1 : -1\n            }\n            if (typeof (a[column]) == \"string\") {\n                return (a[column].localeCompare(b[column]))\n            }\n            return (a[column] - b[column])\n        })\n        this.setState({\n            stats: stats\n        })\n    }\n\n    onSortUp(column) {\n        let stats = this.state.statsShown\n        stats.sort((a, b) => {\n            if (typeof (a[column]) !== typeof (b[column])) {\n                return typeof (a[column]) == 'string' ? 1 : -1\n            }\n            if (typeof (a[column]) == \"string\") {\n                return (b[column].localeCompare(a[column]))\n            }\n            return (b[column] - a[column])\n        })\n        this.setState({\n            stats: stats\n        })\n    }\n\n    calculateReputation() {\n        const completion = this.state.averageCompletion\n        const achievements = this.state.totalAchievements\n        const playtime = this.state.totalPlaytime\n        const reviewScore = this.state.reviewScore\n        const gamesOwned = this.state.totalGames\n        let completionComponent\n        let achievementMultiplier\n        let playtimeComponent\n        let reviewComponent\n        let gameComponent\n        if (completion > 90) {\n            completionComponent = 3\n        } else {\n            completionComponent = completion / 30\n        }\n\n        if (achievements > 2000) {\n            achievementMultiplier = 1\n        } else {\n            achievementMultiplier = achievements / 2000\n        }\n\n        if (playtime > 5000) {\n            playtimeComponent = 2\n        } else {\n            playtimeComponent = playtime / 2500\n        }\n\n        if (reviewScore > 100) {\n            reviewComponent = 3\n        } else {\n            reviewComponent = reviewScore / 30\n        }\n\n        if (gamesOwned > 100) {\n            gameComponent = 2\n        } else {\n            gameComponent = gamesOwned / 50\n        }\n        const rawReputation = achievementMultiplier * completionComponent\n            + playtimeComponent\n            + reviewComponent\n            + gameComponent\n        const reputation = Math.floor(rawReputation)\n        this.setState({ reputation: reputation })\n        updateReputation(this, reputation)\n        updateUsernameReputation(this.state.userName, reputation, false)\n        return reputation\n    }\n\n    extractStats(data) {\n        let completion = -1\n        if (data.achievements === undefined) {\n            return completion\n        }\n        const max = data.achievements.length\n        let achieved = 0\n        for (let i = 0; i < max; i++) {\n            const element = data.achievements[i];\n            if (element.achieved === 1) {\n                achieved++\n            }\n        }\n        completion = (achieved / max) * 100\n        return [achieved, max, completion]\n    }\n\n    updateBannerStats() {\n        const tableStats = this.state.stats\n        let totalAchievements = 0\n        let totalPlaytime = 0\n        let totalCompletion = 0\n        let numGames = 0\n        let gamesWithAchievement = 0\n        for (let i = 0; i < tableStats.length; i++) {\n            const game = tableStats[i];\n            if (game.completion > 0) {\n                totalAchievements += game.unlocked\n                totalCompletion += game.completion\n                numGames++\n            }\n            if (typeof (game.completion) !== 'string') {\n                gamesWithAchievement++\n            }\n            totalPlaytime += game.playtime\n        }\n        this.setState({ totalGames: gamesWithAchievement })\n        this.setState({ gamesAttempted: numGames })\n        this.setState({ totalAchievements: totalAchievements })\n        this.setState({ totalPlaytime: totalPlaytime })\n        this.setState({ averagePlaytime: (totalPlaytime / tableStats.filter(game => game.playtime > 0.1).length) })\n        if (numGames > 0) {\n            this.setState({ averageCompletion: (totalCompletion / numGames) })\n        }\n    }\n\n    async updateAsync(game) {\n        let gameStats = -1\n        await getAchievementStats(game.id)\n            .then(res => { gameStats = this.extractStats(res) })\n        if (gameStats === -1) {\n            game.unlocked = '-'\n            game.total = '-'\n            game.completion = '-'\n        } else {\n            game.unlocked = gameStats[0]\n            game.total = gameStats[1]\n            game.completion = gameStats[2]\n            this.setState({ totalGames: this.state.totalGames + 1 })\n            this.setState({ totalAchievements: this.state.totalAchievements + gameStats[0] })\n            if (gameStats[2] > 0) {\n                this.setState({ gamesAttempted: this.state.gamesAttempted + 1 })\n            }\n        }\n        this.setState({ gamesProcessed: this.state.gamesProcessed + 1 })\n    }\n\n    async updateAchievements() {\n        let gameList = this.state.stats\n        this.setState({ statsShown: gameList.slice() })\n        const step = 6\n        for (let i = 0; i < gameList.length; i += step) {\n            this.updateBannerStats()\n            await Promise.all(gameList.slice(i, i + step).map(game => this.updateAsync(game)))\n        }\n        this.updateBannerStats()\n        this.setState({ showLoading: false })\n        this.calculateReputation()\n    }\n\n    updateStats(data) {\n        let gameList = []\n        const games = data.games\n        for (let i = 0; i < games.length; i++) {\n            let gameEntry = {}\n            const game = games[i]\n            gameEntry['title'] = game.name\n            gameEntry['unlocked'] = 'Calculating...'\n            gameEntry['total'] = 'Calculating...'\n            gameEntry['completion'] = 'Calculating...'\n            gameEntry['playtime'] = game.playtime_forever / 60\n            gameEntry['id'] = game.appid\n            gameList.push(gameEntry)\n            this.setState({ stats: gameList })\n        }\n        this.setState({ gamesOwned: gameList.length })\n        this.setState({ stats: gameList })\n        this.updateAchievements()\n    }\n\n    getReviewStats(data) {\n        const reviews = data\n        let numReviews = reviews.length\n        let score = 0\n        for (let i = 0; i < reviews.length; i++) {\n            score += reviews[i].upvotes\n            score -= reviews[i].downvotes\n        }\n        this.setState({ userReviews: reviews })\n        this.setState({ numReviews: numReviews })\n        this.setState({ reviewScore: score })\n    }\n\n\n    // sets the user membership length to a human readable string\n    async setMemberAge() {\n        let joined\n        await fetch(`/users/joindate/${this.state.userName}`)\n            .then(res => { return res.json() })\n            .then(json => { joined = json.time })\n        const now = new Date()\n        const joinedDate = new Date(joined)\n        const age_ms = now.getTime() - joinedDate.getTime()\n        const ageString = prettyMilliseconds(age_ms) + '  '\n        const stopPoint = ageString.split(' ', 2).join(' ').length\n        this.setState({ joinDate: 'Member for ' + ageString.slice(0, stopPoint) })\n    }\n\n    async componentDidMount() {\n        this.setMemberAge()\n        getGameStats()\n            .then(res => { this.updateStats(res) })\n        await getUserReviews(this, this.state.userName)\n            .then(res => { this.getReviewStats(res) })\n        getReputation(this)\n        getImage(this.state.userName, this)\n    }\n\n    render() {\n        return (\n            <div id=\"AnalyticsPage\">\n\n                <div id=\"HeaderSection\">\n                    <HeadContainer bgId={\"dashboard\"}>\n                        <HeaderNavBar>\n                            <HeaderImage to=\"/dashboard\" src={logo}></HeaderImage>\n                            <div className='group'>\n                                <HeaderButton path='/Dashboard'>Dashboard</HeaderButton>\n                                <HeaderButton path='/ReviewForum'>Forum</HeaderButton>\n                                <CurrentHeaderButton path='/Analytics'>Analytics</CurrentHeaderButton>\n                                <HeaderButton path='/AccountSettings'>Settings</HeaderButton>\n                                <HeaderButton path='/' logoutFunc={() => { logout(this.props.app) }}>Log Out</HeaderButton>\n                            </div>\n                        </HeaderNavBar>\n                    </HeadContainer>\n                </div>\n\n                <div id=\"BodySection\">\n                    <div id=\"TitleSection\">\n                        <h1>Analytics</h1>\n                    </div>\n\n                    <div id=\"StatsSection\">\n                        <div id=\"StatsHeader\">\n                            <div id=\"StatsUser\">\n                                {this.state.image === \"\" ?\n                                    <img id=\"StatsProfilePic\" src={sampleProfilePic} /> :\n                                    <img id=\"StatsProfilePic\" src={\"data:image/png;base64,\" + this.state.image} />\n                                }\n                                <div id=\"StatsUserCaption\">\n                                    <p> {this.state.userName} </p>\n                                    <span> {this.state.joinDate} </span>\n                                </div>\n                            </div>\n                            <div id=\"StatsReputation\">\n                                <p>Reputation Level:</p>\n                                <div id=\"ReputationContainer\">\n                                    {!(this.state.showLoading) || <div id=\"loadingIcon1\">\n                                        <img src={loadingIcon} />\n                                    </div>}\n                                    <span> {this.state.reputation} </span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"StatsRow\" id=\"StatsRow1\">\n                            <div className=\"StatBoxLeft\">\n                                <p>Total Achievements</p>\n                                <span> {this.state.totalAchievements} </span>\n                            </div>\n                            <div className=\"StatBoxCenter\">\n                                <p>Total Playtime</p>\n                                <span> {(Math.round(this.state.totalPlaytime * 100) / 100).toFixed(2)} hours </span>\n                            </div>\n                            <div className=\"StatBoxRight\">\n                                <p>Reviews Posted</p>\n                                <span> {this.state.numReviews} </span>\n                            </div>\n                        </div>\n\n                        <div className=\"StatsRow\" id=\"StatsRow2\">\n                            <div className=\"StatBoxLeft\">\n                                <p>Average Completion</p>\n                                <span> {(Math.round(this.state.averageCompletion * 100) / 100).toFixed(2)} % </span>\n                            </div>\n                            <div className=\"StatBoxCenter\">\n                                <p>Average Playtime</p>\n                                <span> {(Math.round(this.state.averagePlaytime * 100) / 100).toFixed(2)} hours </span>\n                            </div>\n                            <div className=\"StatBoxRight\">\n                                <p>Review Score</p>\n                                <span> {this.state.reviewScore} </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id=\"TableSection\">\n                        <div id=\"StatsTitle\">\n                            <p>Lifetime Stats</p>\n                            {!(this.state.showLoading) || <div id=\"loadingIcon2\">\n                                <img src={loadingIcon} />\n                            </div>}\n                        </div>\n                        <div id=\"TotalStats\">\n                            <p> Total Games Attempted: {this.state.gamesAttempted} </p>\n                            <p> Total Games Supporting Achievements: {this.state.totalGames} (from a total of {this.state.gamesOwned} games owned) </p>\n                            {!(this.state.showLoading) || <p> Progress: processed {this.state.gamesProcessed} games out of {this.state.gamesOwned} </p>}\n                        </div>\n                        <table id=\"StatsTable\">\n                            <thead >\n                                <tr>\n                                    <th id=\"tableID\" className=\"tableHeader\">ID\n                                        <div className=\"sort\">\n                                            <button className=\"sortButton\" onClick={() => this.onSortDown(\"id\")}>\n                                                <span>{this.state.sortAscending ? '▲' : '▼'}</span></button>\n                                        </div>\n                                    </th>\n                                    <th id=\"tableTitle\" className=\"tableHeader\">Title\n                                        <div className=\"sort\">\n                                            <button className=\"sortButton\" onClick={() => this.onSortDown(\"title\")}>\n                                                <span>{this.state.sortAscending ? '▲' : '▼'}</span></button>\n                                        </div>\n                                    </th>\n                                    <th id=\"tableCompletion\" className=\"tableHeader\">Completion %\n                                        <div className=\"sort\">\n                                            <button className=\"sortButton\" onClick={() => this.onSortDown(\"completion\")}>\n                                                <span>{this.state.sortAscending ? '▲' : '▼'}</span></button>\n                                        </div>\n                                    </th>\n                                    <th id=\"tableUnlocked\" className=\"tableHeader\">Unlocked\n                                        <div className=\"sort\">\n                                            <button className=\"sortButton\" onClick={() => this.onSortDown(\"unlocked\")}>\n                                                <span>{this.state.sortAscending ? '▲' : '▼'}</span></button>\n                                        </div>\n                                    </th>\n                                    <th id=\"tableTotal\" className=\"tableHeader\">Total\n                                        <div className=\"sort\">\n                                            <button className=\"sortButton\" onClick={() => this.onSortDown(\"total\")}>\n                                                <span>{this.state.sortAscending ? '▲' : '▼'}</span></button>\n                                        </div>\n                                    </th>\n                                    <th id=\"tablePlaytime\" className=\"tableHeader\">Playtime\n                                        <div className=\"sort\">\n                                            <button className=\"sortButton\" onClick={() => this.onSortDown(\"playtime\")}>\n                                                <span>{this.state.sortAscending ? '▲' : '▼'}</span></button>\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.statsShown.map(row => (\n                                        <tr key={uid(row)}>\n                                            <td className=\"tableCell\">{row.id}</td>\n                                            <td className=\"tableCell\">{row.title}</td>\n                                            <td className=\"tableCell\">{typeof row.completion == 'string' ? row.completion :\n                                                (Math.round(row.completion * 100) / 100).toFixed(2)} </td>\n                                            <td className=\"tableCell\">{row.unlocked}</td>\n                                            <td className=\"tableCell\">{row.total}</td>\n                                            <td className=\"tableCell\">{(row.playtime).toFixed(2)} h </td>\n                                        </tr>\n                                    ))\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <br></br>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Analytics;"]},"metadata":{},"sourceType":"module"}