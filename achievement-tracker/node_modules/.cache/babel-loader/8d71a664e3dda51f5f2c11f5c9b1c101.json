{"ast":null,"code":"import _objectSpread from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/abdullah/steam_achievement_tracker-main/achievement-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Route,Switch,BrowserRouter}from'react-router-dom';import'./App.css';import Home from'./react-components/Home';import ReviewForum from'./react-components/ReviewForum';import Admin from'./react-components/Admin';import Login from'./react-components/Login';import Signup from'./react-components/Signup';import DashBoard from'./react-components/Dashboard';import GameAchievements from'./react-components/GameAchievements';import AccountSettings from'./react-components/AccountSettings';import Analytics from'./react-components/Analytics';import{checkSession}from'./actions/reactAuth';import SteamInfo from'./react-components/InfoPage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={currentUser:null};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){checkSession(this);// sees if a user is logged in\ndocument.title='Steam Achievement Tracker';}// global state passed down which indicates the current logged in user\n},{key:\"render\",value:function render(){var _this2=this;var currentUser=this.state.currentUser;// if the current user is an admin, then any route takes them to the admin dashboard\nif(currentUser&&currentUser.toLowerCase().startsWith('admin')){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsx(Route,{exact:true,path:\"/*\",render:function render(props){return/*#__PURE__*/_jsx(Admin,_objectSpread(_objectSpread({},props),{},{app:_this2}));}})})})});}return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:[\"/Login\",\"/Dashboard\"],render:function render(props){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:!currentUser?/*#__PURE__*/_jsx(Login,_objectSpread(_objectSpread({},props),{},{app:_this2})):/*#__PURE__*/_jsx(DashBoard,_objectSpread(_objectSpread({},props),{},{app:_this2}))});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Signup\",render:function render(props){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:!currentUser?/*#__PURE__*/_jsx(Signup,{}):/*#__PURE__*/_jsx(DashBoard,_objectSpread(_objectSpread({},props),{},{app:_this2}))});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/GameAchievements\",render:function render(props){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:!currentUser?/*#__PURE__*/_jsx(Login,{}):/*#__PURE__*/_jsx(GameAchievements,_objectSpread(_objectSpread({},props),{},{app:_this2}))});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Analytics\",render:function render(props){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:!currentUser?/*#__PURE__*/_jsx(Login,{}):/*#__PURE__*/_jsx(Analytics,_objectSpread(_objectSpread({},props),{},{app:_this2}))});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/AccountSettings\",render:function render(props){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:!currentUser?/*#__PURE__*/_jsx(Login,{}):/*#__PURE__*/_jsx(AccountSettings,_objectSpread(_objectSpread({},props),{},{app:_this2}))});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/ReviewForum\",render:function render(props){return/*#__PURE__*/_jsx(ReviewForum,_objectSpread(_objectSpread({},props),{},{app:_this2}));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/SteamInfo\",render:function render(){return/*#__PURE__*/_jsx(SteamInfo,{});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/*\",render:function render(props){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:!currentUser?/*#__PURE__*/_jsx(Home,{}):/*#__PURE__*/_jsx(DashBoard,_objectSpread(_objectSpread({},props),{},{app:_this2}))});}})]})})});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/abdullah/steam_achievement_tracker-main/achievement-tracker/src/App.js"],"names":["React","Route","Switch","BrowserRouter","Home","ReviewForum","Admin","Login","Signup","DashBoard","GameAchievements","AccountSettings","Analytics","checkSession","SteamInfo","App","state","currentUser","document","title","toLowerCase","startsWith","props","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\nimport './App.css'\n\nimport Home from './react-components/Home'\nimport ReviewForum from './react-components/ReviewForum'\nimport Admin from './react-components/Admin'\nimport Login from './react-components/Login'\nimport Signup from './react-components/Signup'\nimport DashBoard from './react-components/Dashboard'\nimport GameAchievements from './react-components/GameAchievements'\nimport AccountSettings from './react-components/AccountSettings'\nimport Analytics from './react-components/Analytics'\n\nimport { checkSession } from './actions/reactAuth'\nimport SteamInfo from './react-components/InfoPage'\n\nclass App extends React.Component {\n  componentDidMount() {\n    checkSession(this); // sees if a user is logged in\n    document.title = 'Steam Achievement Tracker'\n  }\n\n  // global state passed down which indicates the current logged in user\n  state = {\n    currentUser: null\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    // if the current user is an admin, then any route takes them to the admin dashboard\n    if (currentUser && currentUser.toLowerCase().startsWith('admin')) {\n      return (\n        <div className=\"App\">\n          <BrowserRouter>\n            <Switch>\n              <Route exact path='/*' render={props => (<Admin {...props} app={this} />)} />\n            </Switch>\n          </BrowserRouter>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            {/* renders login and dashboard depending on if the user is logged in */}\n            <Route\n              exact path={[\"/Login\", \"/Dashboard\"]}\n              render={props => (\n                <div className=\"App\">\n                  {!currentUser ? <Login {...props} app={this} /> : <DashBoard {...props} app={this} />}\n                </div>\n              )}\n            />\n            <Route\n              exact path=\"/Signup\"\n              render={props => (\n                <div className=\"App\">\n                  {!currentUser ? <Signup /> : <DashBoard {...props} app={this} />}\n                </div>\n              )}\n            />\n            {/* pages only available if a user is logged in */}\n            <Route\n              exact path=\"/GameAchievements\"\n              render={props => (\n                <div className=\"App\">\n                  {!currentUser ? <Login /> : <GameAchievements {...props} app={this} />}\n                </div>\n              )}\n            />\n            <Route\n              exact path=\"/Analytics\"\n              render={props => (\n                <div className=\"App\">\n                  {!currentUser ? <Login /> : <Analytics {...props} app={this} />}\n                </div>\n              )}\n            />\n            <Route\n              exact path=\"/AccountSettings\"\n              render={props => (\n                <div className=\"App\">\n                  {!currentUser ? <Login /> : <AccountSettings {...props} app={this} />}\n                </div>\n              )}\n            />\n            {/* static routes available to public */}\n            <Route exact path='/ReviewForum' render={props => (<ReviewForum {...props} app={this} />)} />\n            <Route exact path='/SteamInfo' render={() => (<SteamInfo />)} />\n\n            {/* any other route defaults to dashboard if logged in and homepage if not (404 route) */}\n            <Route\n              exact path=\"/*\"\n              render={props => (\n                <div className=\"App\">\n                  {!currentUser ? <Home /> : <DashBoard {...props} app={this} />}\n                </div>\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}